-- MySQL dump 10.13  Distrib 8.0.35, for Linux (x86_64)
--
-- Host: localhost    Database: omr
-- ------------------------------------------------------
-- Server version	8.0.35-0ubuntu0.20.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `answer`
--

DROP TABLE IF EXISTS `answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `answer` (
  `like_count` int DEFAULT NULL,
  `answer_id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime(6) DEFAULT NULL,
  `interview_question_id` bigint DEFAULT NULL,
  `member_id` bigint DEFAULT NULL,
  `modified_at` datetime(6) DEFAULT NULL,
  `content` text,
  PRIMARY KEY (`answer_id`),
  KEY `FK27fnn5n17dkke88bivus8kve6` (`interview_question_id`),
  KEY `FKfib3j2v1lbryi845efii8xik2` (`member_id`),
  CONSTRAINT `FK27fnn5n17dkke88bivus8kve6` FOREIGN KEY (`interview_question_id`) REFERENCES `interview_question` (`interview_question_id`),
  CONSTRAINT `FKfib3j2v1lbryi845efii8xik2` FOREIGN KEY (`member_id`) REFERENCES `member` (`member_id`)
) ENGINE=InnoDB AUTO_INCREMENT=256 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `answer`
--

LOCK TABLES `answer` WRITE;
/*!40000 ALTER TABLE `answer` DISABLE KEYS */;
INSERT INTO `answer` VALUES (0,51,'2023-11-08 10:59:26.819254',21,24,NULL,'출처가 다른 Origin에 대한 접근하도록 하는 개념이라고 할 수 있다 '),(0,53,'2023-11-08 11:01:25.272946',69,24,NULL,'물리적으로 부족한 메모리 공간을 가상 메모리 개념을 통해 확장할 수 있다'),(0,60,'2023-11-08 16:30:19.699159',124,2,NULL,'Optional, Stream API '),(0,61,'2023-11-08 16:48:15.757255',123,2,NULL,'Checked Exception은 Exception을 상속받은 클래스이며, 예외 처리를 강제합니다. Unchecked Exception은 Runtime Exception을 상속받은 하위 클래스들이 이에 속하며, 예외처리를 강제하지 않습니다. 그러나 두 예외 모두 적절한 예외처리가 필요합니다.'),(0,62,'2023-11-08 16:50:11.187141',124,2,NULL,'Functional Interface와 Lambda 표현식, Optional, 날짜 관련 클래스들 추가'),(0,63,'2023-11-08 16:54:52.763323',122,2,NULL,'String은 불변 객체이며 StringBuilder, String Buffer은 내부적으로 가변 배열을 사용합니다. StringBuffer는 syncronized 키워드를 사용하여 모니터락을 사용하자만 StringBuilder는 사용하지 않습니다. 따라서 동기화가 필요한 상황에서는 StringBuffer가 적절하며, 그렇지 않은 경우 락이 없어 성능이 더 좋은 StringBuilder를 사용하는 것이 적절합니다.'),(0,64,'2023-11-08 16:57:58.041091',121,2,NULL,'자바에서 primitive type은 stack영역 안에 지역 변수에 값이 그대로 저장되지만,  reference type의 경우에는 실제 객체는 heap 영역에 저장되며, 지역변수에는 해당 heap 영역을 참조하는 주소값을 저장하는 차이가 있습니다. '),(0,65,'2023-11-08 17:00:15.833991',120,2,NULL,'동일성은 두 객체가 실제로 동일한 객체인지를 의미하며, 동등성은 두 객체가 서로 동일한 값을 가졌음을 의미합니다.'),(0,66,'2023-11-08 17:05:19.292902',119,2,NULL,'자바에는 private, public, protected, default 총 4가지 접근제어가 있습니다. default 제어자는 동일한 패키지에서 접근이 가능하며, private은 동일한 클래스 여부에서만 접근이 가능합니다. protected는 동일한 클래스 또는 해당 클래스를 상속받은 클래스에서만 접근이 가능하며, public의 경우 어디서는 접근이 가능함을 의미합니다. '),(0,67,'2023-11-08 17:07:39.099489',118,2,NULL,'자바의 원시타입들과, 각 크기는 일반적으로 다음과 같습니다. byte(1byte), short(2byte), char(2byte), int(4byte), long(8byte), float(4byte), double (8byte), boolean(1byte) '),(0,68,'2023-11-08 17:10:38.978964',117,2,NULL,'static 키워드가 붙은 경우, 해당 메서드 또는 멤버변수가 클래스 메서드 또는 클래스 멤버변수임을 의미합니다. 따라서 static 키워드가 붙은 메서드 또는 멤버변수는 자바버전에 따라 다르지만 일반적으로 class loader에 의해 메모리에 적재될때  메서드 영역에 생성되며  모든 클래스 인스턴스가 이를 공유합니다. '),(0,69,'2023-11-08 17:13:03.113537',116,2,NULL,'클래스란 비슷한 성질의 변수 또는 메서드가 모여있는 객체를 만들기 위한 일종의 설계도이며, 객체는 클래스에 있는 정보를 바탕으로 실제 소스코드에 의해 선언되어 메모리에 적재된 인스턴스를 의미합니다.'),(0,70,'2023-11-08 17:19:09.196998',115,2,NULL,'추상클래스는 단일 상속만이 가능하며, 일반 멤버변수나 구현가 있는 일반 메서드를 가질 수 있습니다.  인터페이스는 다중 상속이 가능하며, 일반 멤버변수나, 구현부가 있는 일반 메서드를 사용할 수 없습니다. '),(0,71,'2023-11-09 08:46:58.084400',73,16,NULL,'클라이언트가 FIN 패킷을 받고 나서 바로 종료되지 않고 TIME_WAIT을 통해 기다리면서 남은 패킷을 전송 받을 수 있도록 합니다.'),(0,74,'2023-11-09 09:33:58.893574',17,2,NULL,'1. 최초로 ISP에 www.naver.com 의 주소를 가지고 있는지 확인한다2. 가지고 있다면 바로 이동을 하고, 없다면 DNS의 루트 서버부터 www 서버까지 주소지를 알아낸다3. 알아낸 주소지를 저장하고 해당 주소로 요청한다'),(0,75,'2023-11-09 09:39:30.800618',32,25,NULL,'조인이란 두 개 이상의 테이블을 연결 또는 결합하여 데이터를 출력하는 것을 말합니다.'),(0,79,'2023-11-09 09:42:51.525208',32,25,NULL,'조인이란 두 개 이상의 테이블을 연결 또는 결합하여 데이터를 출력하는 것을 말합니다.'),(0,81,'2023-11-09 09:43:29.805513',17,18,NULL,'12312313'),(0,84,'2023-11-09 09:54:40.782222',56,25,NULL,'=== 은 변수 유형을 고려하고, ==는 변수 값을 기반으로 유형을 수정해주는 차이가 있습니다'),(0,92,'2023-11-09 10:17:08.784337',17,26,NULL,'네트워크 요청을 처리하기 위해서 먼저 도메인 네임에 대 IP주소로 변환해야합니다. 브라우저는 DNS 기록 중 해당 DNS에 대한 캐시가 존재하는지 먼저 확인하고, 존재하지 않는 경우 DNS서버에 해당 도메인 네임에 대한 ip 주소를 요청합니다. 이 때 도메인 네임 서버는 캐시를 확인하고 없다면 루트 도메인 네임 서버의 주소를 요청자에게 전달합니다. 요청자는 해당 도메인 네임 주소로, 전체 도메인 네임 주소를 얻기 위해 다시 요청을 보내고, 도메인 네임을 찾을 때까지 캐싱된 정보 조회, DNS 서버 요청이 반복되게 됩니다. IP 주소를 얻었다면 해당 IP 주소와 3 handway shake를 이용해 tcp connection을 만들어야합니다. 따라서 클라이언트와 서버는 syn, syn+ack, ack순서대로 패킷을 주고 받아야합니다. 이 때 각 패킷은 라우팅 테이블을 거쳐 next hop의 ip주소를 얻고 만약 없다면 default gate way의 ip주소로 패킷을 전달합니다. 이 때 패킷은 ARP 테이블을 확인하고 ARP 테이블에 존재하는 mac주소를 목적지로 하여 전달되며, 최종 목적지로 전달될 때 까지 위 과정이 반복되게 됩니다. 만약 https를 사용하는 경우에는 tcp connection이 수립된 이후, ssl handshake를 추가적으로 진행하여 서버와 클라이언트가 공유하는 세션키를 만들어 각 요청을 세션키로 암호화하여 전달하게 됩니다.  '),(0,93,'2023-11-09 10:20:12.448505',16,26,NULL,'DNS란 도메인 네임 시스템의 약자로, 사용자가 기억하기 어려운 ip주소 대신, 비교적 기억하기 쉬운 도메인 네임을 이용하여 서버의 리소스에 접근할 수 있도록 만들어진 시스템입니다. '),(0,98,'2023-11-09 11:55:26.940915',17,27,NULL,'dns 조회dns 응답tcp 연결웹 서버 접속서버 응답데이터 전송렌더링'),(0,99,'2023-11-09 11:59:09.235051',117,28,NULL,'정적....'),(0,101,'2023-11-09 12:05:58.933430',17,28,NULL,'1. 해당 URL로 GET 요청을 보낸다.2. ???가 URL의 IP 주소를 찾는다.3. 해당 주소로 TCP 요청을 보낸다.4. 연결이 성사되면 서버는 클라이언트에 데이터를 보낸다.5. 클라이언트는 서버로부터 받은 데이터를 렌더링한다.'),(0,102,'2023-11-09 12:06:32.994824',16,28,NULL,'도메인 네임 시스템의 약자로, IP를 URL로, URL를 IP로 변환 시켜주는 역할을 한다.'),(0,138,'2023-11-09 15:18:10.507159',17,55,NULL,'네트워크 = net + work\nwork는 일을 하기 싫다..\n저녁엔 곱도리탕 다음날은 떡볶이 저녁은 삼겹살..\n이런 현상이 일어난다. url을 입력하면'),(0,139,'2023-11-09 15:20:05.721545',16,55,NULL,'DeungSim Noodle Soup'),(0,140,'2023-11-09 15:20:20.816942',15,55,NULL,'택배 전송해주시는 집배원분들 항상 감사합니다.'),(0,141,'2023-11-09 15:20:39.420980',14,55,NULL,'안 나누면 서운해서'),(0,142,'2023-11-09 15:32:34.184626',157,55,NULL,'B로 시작하는건 BTS밖에 몰라용..ㅠ '),(0,143,'2023-11-09 15:32:50.885467',14,56,NULL,'몰라몰라몰라'),(0,144,'2023-11-09 15:35:20.733199',17,57,NULL,'네이버가 켜진다..?\n\n'),(0,145,'2023-11-09 15:36:30.274406',16,57,NULL,'domain name server'),(0,146,'2023-11-09 15:37:05.259605',15,57,NULL,'전송한다'),(0,147,'2023-11-09 15:37:10.363430',14,57,NULL,'편하려고'),(0,148,'2023-11-09 15:37:31.809425',158,57,'2023-11-13 16:31:34.673691','어려워야한다\ndp안쓰면 못풀어야한다'),(1,149,'2023-11-09 15:37:59.045603',154,57,'2023-11-13 15:06:49.817398','도메인 파이어 서버'),(0,150,'2023-11-10 00:19:10.692310',10,16,NULL,'선점은 프로세스가 cpu를 점유하고 있을 때 작업이 다 끝나지 않았더라도 다른 프로세스가 cpu를 점유할 수 있는 것이고\n비선점은 현재 cpu를 사용하고 있는 프로세스가 작업이 다 끝날 때까지 다른 프로세스가 점유하지 못하고 기다려야 하는 것을 말합니다.\n'),(0,151,'2023-11-10 00:22:25.909926',69,16,NULL,'메모리 사이즈가 한정돼있는데, 가상메모리를 사용함으로써 더 큰 메모리 공간을 사용하는 효과를 얻을 수 있습니다.'),(1,152,'2023-11-10 00:25:40.037088',158,16,'2023-11-13 16:31:05.321038','1. 문제를 작게 나눌 수 있다.\n2. 작은 문제의 해로 큰 문제의 해를 구할 수 있다.\n\n'),(0,153,'2023-11-10 00:27:54.336423',46,16,NULL,'정렬된 데이터에서 절반을 나눠서 중앙값과 찾는 값을 비교하면서 범위를 반씩 줄이는 탐색 방법입니다.\n한번 탐색할 때마다 사이즈가 1/2로 줄어들기 때문에 시간 복잡도는 O(logn)이 됩니다.\n'),(0,154,'2023-11-10 00:31:24.316683',45,16,NULL,'BFS는 너비우선탐색, DFS는 깊이우선탐색입니다.\nBFS는 가까운 노드부터 탐색하고, DFS는 최대한 한 방향으로 멀리까지 탐색하고 다시 이전 갈림길로 돌아가서 반복하는 것입니다.\n'),(0,158,'2023-11-10 09:26:34.662200',145,11,NULL,'PSA, AOP, IoC 입니다.'),(0,159,'2023-11-10 10:02:20.219308',71,61,NULL,'uri는 그 문자로 요청을 구분할 수 있고 URL은 origin까지 담겨있습니다.'),(0,160,'2023-11-10 10:02:59.254670',70,61,NULL,'외부 사이트의 정보를 이용하여 인증을 진행하는 것입니다.'),(0,161,'2023-11-10 10:23:00.614257',155,61,NULL,'재귀는 함수를 사용해서 함수 안에서 동일한 함수를 다시 호출하여 해당 함수의 조건에 맞을 때 까지 반복적으로 해당 함수를 호출하는 것으로 DFS 에서 주로 사용됩니다. 반복문은 for, while문을 이용해서 조건을 만족할 떄까지 반복문 안의 동일한 로직을 수행합니다. BFS에서 주로 사용합니다.'),(0,165,'2023-11-10 13:25:47.046217',10,52,NULL,'선점은 Task가 CPU를 점유하고 있더라도\n다른 Task가 점유하고 있는 Task를 중지시키고 CPU를 차지할 수 있는 스케줄링 기법이고\n비선점은 다른 Task가 점유하고 있다면 끝날때까지 대기해야 하는 스케줄링 기법입니다'),(0,166,'2023-11-10 15:25:10.114345',10,65,NULL,'ckdl'),(0,167,'2023-11-10 15:25:15.880958',160,62,NULL,'네트워크 계층'),(0,168,'2023-11-10 15:25:19.925757',10,64,NULL,'자원의 소유권을 가진것과\n그렇지 않은것'),(0,169,'2023-11-10 15:25:59.533991',8,64,NULL,'프로그램을 종료합니다'),(0,170,'2023-11-10 15:27:29.851806',73,62,NULL,'기다린다.'),(0,171,'2023-11-10 15:27:35.015769',7,64,NULL,'한 스레드에서 하나의 명령을 수행 후 다음 명령이 다른 스레드로 명령이 수행될 때\n수행 영역이 바뀌는 현상을 얘기함'),(0,172,'2023-11-10 15:31:32.509977',72,62,NULL,'1. 클라이언트가 fin 플래그를 포함하여 fineshed 요청을 서버에 보낸다.\n2. 서버가 fin 요청을 받은 후 fin에 대한 ack 요청을 보낸다.\n3. 서버가 클라이언트의 유실된 요청이 없는지 가다린 후, 모든 요청을 받은 뒤 클라이언트에게 fin 요청을 보낸다.\n4. 클라이언트가 fin 요청을 받고, ack를 보낸다. 서버가 이 ack를 받으면 연결이 종료된다.'),(0,173,'2023-11-10 15:34:06.469672',71,62,NULL,'uri는 url을 포함하고 있다. uri는 프로토콜을 포함하여야 한다.'),(0,174,'2023-11-10 15:34:56.837604',22,62,NULL,'rest 아키텍처를 적용한 api입니다. http의 get, post, delete, update 메소드를 활용하여 표현합니다. /와 경로를 통해 경로를 표현합니다.'),(0,175,'2023-11-10 15:35:25.318150',20,62,NULL,'동일한 요청에 대해서 같은 응답을 하는 것이다.'),(0,176,'2023-11-10 15:36:09.818868',18,62,NULL,'tcp는 안정성을 보장하고, udp는 안정성을 보장하지 못한다. tcp는 안정성을 보장하기 위해 ack를 활용하여 처음 연결할 때에는 3wayhandshake를 거치고, 연결을 종료할 때에는 4way hand shake를 거친다.'),(0,177,'2023-11-10 15:39:16.938509',17,62,NULL,'우선 해당 url을 ip로 반환해야한다. 이때 브라우저, 운영체제의 캐시를 조회하고, 만약 없다면 dns서버를 조회한다.\n이렇게 되면 7계층부터 1계층 까지 데이터를 씌우면서, 차례대로 밑으로 내려가 랜카드에서 데이터를 전송한다. 그러면 해당 요청은 ip를 확인하여 라우터에서 서버에 도착하게 된다. 서버에서는 반대로 1계층 부터 껍질을 까면서 7계층까지 데이터를 만들고, 서버에서 데이터를 받는다.'),(0,178,'2023-11-10 15:44:52.678462',16,62,NULL,'도메인 네임 시스템이다. ip와 도메인 네임을 관리하는 데이터베이스로 트리형태로 도메인네임을 저장하여 관리한다.'),(0,179,'2023-11-10 15:45:18.703971',15,62,NULL,'대표적으로 tcp / udp 프로토콜이 있다. '),(0,180,'2023-11-10 15:51:09.241548',182,62,NULL,'우선 c++에 vector에 대해서 설명해드리겠습니다. vector 배열로 구현되어 있습니다. 처음 선언될 때 사이즈가 1로 생성되는 것으로 알고있고, 2배씩 크기를 증가 시켜가면서 늘려간다. 만약 중간에 데이터를 삽입한다면 한칸씩 밀면서 데이터를 옮기기 때문에 O(n)의 시간복잡도가 든다.'),(0,181,'2023-11-10 15:55:44.397390',145,70,NULL,'ioc di aop'),(0,182,'2023-11-10 15:56:38.522887',10,70,NULL,'선점은 자원을 뺏어올 수 있는 거고\n비선점은 못 뺏어요 힝힝 8ㅅ8'),(0,183,'2023-11-10 15:57:54.779122',169,70,NULL,'덱은 엉덩이로도 들어가는데\n큐는 입으로만 넣을 수 있어요 ^-^\n물론 빼는것도 돼요 :)'),(0,184,'2023-11-10 16:22:30.684306',10,72,NULL,'정현 ㅎㅇ'),(0,185,'2023-11-10 16:24:40.262792',158,73,'2023-11-16 20:33:04.142901','모르게써요'),(0,186,'2023-11-10 16:46:08.560690',182,52,NULL,'Vector의 동작 방식은 다음과 같습니다.\n\nVector가 생성되면 처음에는 최소 크기의 메모리를 할당합니다.\nVector에 요소가 추가되면 기존 메모리 공간이 부족해지면 새로운 메모리 공간을 할당합니다.\n새로운 메모리 공간은 기존 메모리 공간의 1.5배 크기로 할당됩니다.\nVector의 크기가 줄어들면 기존 메모리 공간을 축소합니다.'),(2,187,'2023-11-10 16:48:10.065939',181,52,'2023-11-15 14:31:51.666139','힙 메모리는 프로그램에서 필요한 만큼의 메모리를 동적으로 할당하여 사용합니다. 이러한 동적 할당은 프로그램에서 사용되는 데이터의 크기를 미리 예측하기 어려울 때 유용합니다. 예를 들어, 문자열, 배열, 객체 등이 힙 메모리에 저장됩니다. 힙 메모리는 FILO(First In First Out) 방식으로 관리됩니다.\n\n힙 메모리는 일반적으로 malloc(), calloc(), realloc()과 같은 함수를 사용하여 할당됩니다. 이 함수들은 운영체제에 메모리 할당을 요청하여, 할당된 메모리의 주소를 반환합니다.\n\n힙 메모리는 사용이 완료되면 free() 함수를 사용하여 해제해야 합니다. 해제되지 않은 힙 메모리는 메모리 누수(memory leak)를 유발할 수 있습니다.'),(0,188,'2023-11-10 16:49:06.043210',180,52,NULL,'맵은 키와 값의 쌍을 해시 테이블에 저장합니다. 해시 테이블은 키를 해시 함수를 사용하여 숫자로 변환하고, 해당 숫자를 인덱스로 사용하여 값을 저장하는 방식입니다. 맵의 장점은 다음과 같습니다.\n\n키를 기준으로 O(1)의 시간 복잡도로 검색, 삽입, 삭제가 가능합니다.\n키와 값의 순서를 보장하지 않습니다.\n\n맵의 단점은 다음과 같습니다.\n\n해시 충돌이 발생할 수 있습니다.\n\n트리 맵은 키와 값의 쌍을 이진 탐색 트리에 저장합니다. 이진 탐색 트리는 키를 기준으로 정렬된 트리로, 키를 기준으로 O(log n)의 시간 복잡도로 검색, 삽입, 삭제가 가능합니다. 트리 맵의 장점은 다음과 같습니다.\n\n키를 기준으로 O(log n)의 시간 복잡도로 검색, 삽입, 삭제가 가능합니다.\n키와 값의 순서를 보장합니다.'),(0,189,'2023-11-10 16:50:20.835938',179,52,NULL,'리버스 프록시(Reverse Proxy)는 클라이언트와 서버 간의 중개자 역할을 하는 서버입니다. 클라이언트의 요청을 대신 받아 서버에 전달하고, 서버의 응답을 클라이언트에게 전달합니다.\n\n리버스 프록시의 주요 기능은 다음과 같습니다.\n\n로드 밸런싱: 리버스 프록시는 여러 대의 서버에 요청을 분산하여 처리함으로써 로드 밸런싱을 수행할 수 있습니다.\n캐싱: 리버스 프록시는 서버의 응답을 캐시하여 클라이언트의 요청을 빠르게 처리할 수 있습니다.\n보안: 리버스 프록시는 클라이언트와 서버 간의 통신을 보호하기 위해 방화벽, 인증, 액세스 제어 등의 기능을 제공할 수 있습니다.\n\n리버스 프록시는 다음과 같은 경우에 유용하게 사용될 수 있습니다.\n\n다수의 서버를 운영하는 경우: 리버스 프록시를 사용하여 여러 대의 서버에 요청을 분산하여 처리함으로써 성능을 향상시킬 수 있습니다.\n대용량 트래픽을 처리하는 경우: 리버스 프록시를 사용하여 캐싱 기능을 제공함으로써 대용량 트래픽을 효율적으로 처리할 수 있습니다.\n보안을 강화해야 하는 경우: 리버스 프록시를 사용하여 방화벽, 인증, 액세스 제어 등의 기능을 제공함으로써 보안을 강화할 수 있습니다.'),(0,190,'2023-11-10 16:51:11.538651',177,52,NULL,'\n\n\n힙은 완전 이진 트리(Complete Binary Tree)의 일종으로, 우선순위 큐를 위하여 만들어진 자료 구조입니다. 힙은 느슨한 정렬 상태를 유지하며, 부모 노드가 자식 노드보다 크거나 작은 특성을 가지고 있습니다.\n\n힙의 특징은 다음과 같습니다.\n\n최댓값 또는 최솟값을 빠르게 찾을 수 있습니다.\n삽입, 삭제 연산의 시간 복잡도가 O(log n)입니다.\n중복된 값을 허용합니다.'),(0,191,'2023-11-10 16:52:00.335221',176,52,NULL,'인덱스 트리에서 삽입이 일어날 때의 시간 복잡도는 O(log n)입니다. 인덱스 트리는 이진 탐색 트리를 기반으로 한 자료 구조이기 때문입니다. 이진 탐색 트리에서 삽입 연산은 다음과 같이 수행됩니다.\n\n삽입할 원소의 위치를 찾습니다.\n삽입할 원소를 찾은 위치에 삽입합니다.\n\n1번 단계에서는 삽입할 원소의 위치를 찾기 위해 이진 탐색을 수행합니다. 이진 탐색의 시간 복잡도는 O(log n)입니다. 2번 단계에서는 삽입할 원소를 찾은 위치에 삽입하기 위해 트리의 구조를 수정합니다. 트리의 구조를 수정하는 데 걸리는 시간은 O(1)입니다. 따라서, 인덱스 트리에서 삽입 연산의 시간 복잡도는 O(log n) + O(1) = O(log n)입니다.\n\n다만, 인덱스 트리의 종류에 따라 삽입 연산의 시간 복잡도가 달라질 수 있습니다. 예를 들어, 레드-블랙 트리는 이진 탐색 트리의 특성을 유지하면서도 삽입과 삭제 연산의 시간 복잡도를 O(log n)으로 보장합니다.'),(0,192,'2023-11-10 16:52:52.230839',174,52,NULL,'중위 순회(Inorder Traversal): 왼쪽 서브트리 → 루트 노드 → 오른쪽 서브트리'),(0,193,'2023-11-10 17:12:39.051304',10,75,NULL,'선점은 내꺼 비선점은 안내꺼'),(0,194,'2023-11-10 17:13:48.235031',10,76,NULL,'모르겠다..'),(0,195,'2023-11-10 17:13:55.089705',9,76,NULL,'모르겠다..'),(0,196,'2023-11-10 17:14:01.133432',8,76,NULL,'모르겠다..'),(0,197,'2023-11-10 17:16:15.803366',17,76,NULL,'먼저 로컬에 naver.com 정보가 있는지 확인 한 뒤에 DNS 서버로 가, 저기는 naver.com에 해당하는 ip를 받아서 접속한 이후에, 거기에 ping을 보내면 정보를 받게된다. 정보를 받아서 다시 javascript를 실행해서 api를 실행하는 구조가 된다.'),(0,198,'2023-11-10 18:30:01.210191',111,18,NULL,'가비지컬렉션이 필요한 이유는 메모리를 신경쓰지 않고 개발에 온전히 집중할 수 있기 때문입니다\n\n가비지컬렉션은 메모리에 있는 데이터 중 사용하지 않는다면 메모리에서 쫒아내어 자원관리를 자동으로 해줍니다\n\n동작방식은 모르겠습니다\n'),(0,199,'2023-11-10 18:35:07.801527',181,18,'2023-11-13 14:58:47.845950','프로세스의 주소공간은 코드, 스택, 힙, 데이터영역으로 구분되는데\n\n이 중 힙 영역은 전역변수나 동적으로 할당되는 값을 저장하는 메모리 공간입니다.\n'),(0,200,'2023-11-10 18:37:11.366520',69,18,NULL,'프로세스의 필요한 부분만을 메모리에 스와핑을  하면서 올릴 수 있게 됩니다 이를 통해 메모리에는 올라와있지만 필요하지 않은 부분을 최소화하며 효율적으로 메모리를 사용할 수 있게 합니다'),(0,201,'2023-11-10 18:40:43.007457',68,18,NULL,'프로세스를 의미단위로 잘라서 메모리에 올리는 기법을 말합니다\n\n비슷한 전략으로는 페이징시스템이 있지만 이는 \n프로세스와 메모리를 동일한 크기인 페이지 단위로 분리하고 메모리에 적재할때 페이지단위로  적재하는 방법인 반면\n\n세그멘테이션은 의미단위로 동일한 사이즈의 데이터가 항상 메모리에 올라가지 않을 수 있습니다 프로세스는 코드, 데이터, 스택, 힙 영역으로 구분되는데 세그먼트 단위를 코드 단위로 분리할 수도 있고, 스택 단위 또는 코드영역의 메소드단위로 분리할 수 있습니다\n\n이렇게 사용함으로 서로 연관된 부분만을 의미단위로 쪼개어 메모리에 올림으로 잘못된 메모리 주소 접근으로 다른 자원을 건드리는 등 보안적인 부분이 강화됩니다\n'),(0,202,'2023-11-10 18:42:06.046466',67,18,NULL,'프로세스를 페이지단위로 쪼개고 메모리도 페이지 사이즈와 동일한 페이지 프레임으로 쪼개어 프로세스를 메모리에 적제할때 페이지 단위로 적재하는 방법을 말합니다'),(0,203,'2023-11-10 18:44:54.048145',66,18,NULL,'cpu의 소유권을 가진 프로세스에게 cpu를 메어권을 빼앗지 못하는 방식입니다. 결국 인터럽트가 발생하거나 프로세스가 종료되어야만 cpu의 권한을 얻을 수 있습니다 운영체제에서는 인터럽트가 발생했을때 커널모드로 들어가서 작업을 처리해야하는데 비선점 방식은 cpu를 빼앗지 못히기 때문에 타이머라는 하드웨어를 두어 타임아웃이 발생하면 해당 프로세스에게 하드웨어 인터럽트를 걸어 cpu를 빼앗아 옵니다'),(0,204,'2023-11-10 18:45:37.515814',65,18,NULL,'실행중인 소프트웨어의 cpu의 제어권을 뺏을수 있는 방식입니다'),(0,205,'2023-11-10 18:48:44.554069',61,18,NULL,'사용자모드는 커널영역에 접근할 수 없는 등 제한된 명령어만 실행할 수 있는 모드입이다 modbit 0으로 세팅됩니다\n\n커널모드는 운영체제의 인터럽트 핸들러 등 모든 명령어를 실행할 수 있는 권한을 얻습니다 modebit은 1입니다\n'),(0,206,'2023-11-10 18:53:31.855359',12,18,NULL,'프로세스가 실행되다 i/o작업이나 예외 등이 발생했을때 운영체제에게 알려 그에맞는 명령어를 실행하기 위한 것을 의미합니다\n\n여기서 명령어는 인터럽트 처리루틴이 될것이며\n\n인터럽트는 하드웨어인터럽트 소프트웨어 인터럽트로 나뉩니다\n\n'),(0,207,'2023-11-10 18:54:17.724576',10,18,NULL,'선점은 자원을 빼앗을 수 있고 비선점을 빼앗을수 없습니다\n\n'),(0,208,'2023-11-10 18:55:20.476387',9,18,NULL,'경쟁상태라고도 하는데 서로다른 프로세스나 스레드가 공유자원에 대해 접근하는 상황입니다'),(0,209,'2023-11-10 18:55:37.825674',8,18,NULL,'은행원알고리즘'),(0,210,'2023-11-10 18:58:03.957383',7,18,NULL,'프로세스의 문맥을 전환하기 위한 방법입니다.\n\ncpu를 가지고 실행중인 한 프로세스가 종료되거나 인터럽트가 발생하여 cpu를 다른 프로세스에게 할당할때 이전 프로세스의 진행상태 즉 문맥을 저장합니다\n추가로 새로 실행되는 프로세스는 커널영역의 데이터섹션에 있는 pcb를 통해 다음에 수행해야할 명령어의 주소가담긴 pc라던지 등 진행상황을 로드하는 과정을 말합니다\n'),(0,211,'2023-11-10 18:59:14.936151',5,18,NULL,'fork를 통해 부모프로세스를 복제한 자식프로세스를 생성하고\nexec를 통해 새로운 프로세스를 생성합니다\n'),(0,212,'2023-11-10 19:00:47.383985',4,18,NULL,'프로세스간에는 서로 독립적이고 자원을 공유하지 못합니다 하지만 스레드는 한 프로세스내에 여러개가 존재할 수 있고 코드 데이터 힙 영역을 공유합니다\n\n그래서 프로세스는 공유하는 자원이 없기에 컨텍스트스위칭이 발생하면 캐시메모리를 지워야하고 스레드에 비해 오버헤드가 심합니다\n'),(0,213,'2023-11-10 19:02:07.015107',3,18,NULL,'소프트웨어를 편리하게 사용할 수 있도록 자원관리, 메모리관리, cpu스케줄링, 입출력 관리,하드웨어 관리 등을 수행하는 것'),(0,214,'2023-11-10 19:02:52.155387',178,18,NULL,'그림이 없는뎁쇼'),(0,215,'2023-11-10 19:04:00.419921',177,18,NULL,'우선순위 큐를 구현하기 위한 자료구조\n최소힙과 최대입이 있으며 데이터를 삭제할때 제일 크거나 작은 데이터를 삭제하는 자료구조\n'),(0,216,'2023-11-10 19:06:19.818849',172,18,NULL,'루트노드에서 제일 멀리있는 자식노드의 거리를 의미함'),(0,217,'2023-11-10 19:10:38.810299',166,18,NULL,'c에서 d를 가리키는 포인터를 f를 가리키도록 변경하고\nf의 포인터는 d를 가리키도록 한다\n'),(0,218,'2023-11-10 19:11:04.142677',164,18,NULL,'데이터를 효율적으로 관리하기 위한 데이터의 구조를 말함'),(0,219,'2023-11-10 19:11:46.096577',95,18,NULL,'노드와 노드간 포인터로 연결되어 있는 구조로\n순차접근이 가능합니다\n'),(0,220,'2023-11-10 19:18:57.367697',56,16,NULL,'==는 값만 비교하고 ===는 값과 타입까지 비교합니다.'),(0,221,'2023-11-10 23:39:13.485015',19,16,NULL,'HTTPS는 암호화를 통해 보안을 강화한다'),(0,222,'2023-11-10 23:49:16.645800',72,16,NULL,'연결을 종료하는 과정입니다.\n클라이언트가 FIN 플래그를 보내면 서버는 ACK를 보내고 남아있는 패킷을 전송한 뒤 FIN 플래그를 보냅니다.\n클라이언트는 ACK 패킷을 보내고 TIME_WAIT 상태로 일정 시간 기다렸다가 Close 됩니다.\n'),(0,223,'2023-11-10 23:52:52.627157',18,16,NULL,'TCP는 신뢰를 보장하며 연결형이고 UDP는 신뢰를 보장하지 않고 비연결형입니다.\nTCP는 패킷의 도착 순서를 보장하고 데이터가 손실되지 않도록 보장하며 3-way handshake를 통해 연결 후 데이터를 전송합니다. UDP는 연결 과정을 따로 거치지 않으며 데이터의 순서나 신뢰를 보장하지 않습니다.\n주로 실시간 스트리밍 작업에서 쓰입니다.\n'),(0,225,'2023-11-11 00:00:00.439653',14,16,NULL,'데이터를 주고 받는 과정을 단계별로 나누어 문제가 발생했을 때 어떤 단계에서 문제가 발생했는지 파악하고 그 부분만 고칠 수 있게 된다.'),(0,226,'2023-11-11 00:02:40.330598',181,16,'2023-11-13 16:21:57.463425','동적으로 할당되는 값들이 저장되는 장소입니다.'),(0,227,'2023-11-11 15:56:27.276922',111,52,NULL,'Garbage Collector로서 Heap memory를 차지하고 있는 인스턴스를 정리해주는 역할을 합니다\n필요한 이유는 Memory Leak 현상이 발생할 수 있기 때문에 꼭 필요하며 일정 기간 사용하지 않는 인스턴스를 정리합니다'),(0,228,'2023-11-11 16:04:50.315245',126,52,NULL,'강한 결합은 객체지향에서 자주 언급되는 개념입니다\n실제 구현된 오브젝트를 주입해서 사용하는 경우 강한 결합이라고 표현할 수 있으며, 느슨한 결합이란\n구현된 오브젝트가 아닌 인터페이스를 의존하여 결합도를 낯눈 것을 의미합니다'),(0,229,'2023-11-11 18:12:37.978918',111,52,NULL,'테스트'),(0,230,'2023-11-11 18:24:09.702258',137,52,NULL,'Filter는 웹 컨테이너 즉 서블릿 컨테이너 내 진입에서 관리하고 스프링 인터셉터는 스프링 컨테이너에서 관리'),(0,231,'2023-11-12 01:51:11.793488',73,52,NULL,'Time wait가 일어난다'),(0,232,'2023-11-12 02:21:34.687542',55,16,NULL,'변수나 함수의 선언이 코드 최상단으로 끌어올려진 듯한 효과를 말합니다.\n실행 컨텍스트가 생성될 때 코드를 실행하기 전 변수의 선언을 먼저 등록해놓기 때문에 이러한 현상이 발생합니다.\n'),(0,233,'2023-11-12 02:29:12.580262',58,16,NULL,'mutable은 원본 데이터가 변하는 것, immutable은 변하지 않는 것'),(0,234,'2023-11-12 02:35:25.964281',54,16,NULL,'내장 객체는 ECMAScript에 정의된 객체이며 환경에 상관없이 사용할 수 있다.\n예시로는 Object, Function, Date, Math 등\n호스트 객체는 어플리케이션 환경과 운영체제에 따라 달라지는 객체이다.\n예시로는 window, location, getElementsById 등등\n'),(0,235,'2023-11-12 02:45:26.256720',53,16,NULL,'함수가 자신이 선언되었을 때의 상위 렉시컬 환경을 기억하고 있는 기능입니다.\n보통 함수 내부에서 변수와 내부 함수를 정의하고 내부 함수를 리턴해 변수에 할당하고 사용합니다.\n변수를 통해 내부 함수를 실행하면 외부 함수의 변수를 사용할 수 있게 됩니다.\n사용하는 이유는 전역 스코프를 오염시키지 않기 위해, 변수를 캡슐화 하기 위해, 데이터를 보존하기 위해 등이 있습니다.\n'),(0,236,'2023-11-12 02:50:33.782811',52,16,NULL,'null은 빈 값을 할당한 것\nundefined는 선언은 됐으나 할당이 안 된 것\nundeclared는 선언조차 안 된 것\n'),(0,237,'2023-11-12 11:11:17.347109',50,16,NULL,'기본적으로 this는 전역 객체를 가리키는데 함수 내에서 사용하면 호출 방식에 따라 달라집니다.\n일반 함수의 경우 this는\nnew를 통해 객체를 생성하면 해당 객체를 가리키고\ncall, apply, bind 함수로 바인딩 하면 인자로 전달된 객체를 가리키고\n객체 내 메서드로 호출되면 해당 객체를 가리키고\n나머지 경우는 strict mode일 땐 window 객체를 가리키고, 일반 모드일 땐 undefined가 됩니다.\n\n화살표 함수의 경우 this는 자기가 정의된 스코프의 this를 가집니다. (생성 시점에 결정)\n'),(0,238,'2023-11-12 11:12:20.605371',49,16,NULL,'하위 엘리먼트가 여러개일 때 상위 엘리먼트에 이벤트리스너를 달아서 한번에 처리하는 것입니다.\n하위 엘리먼트가 동적으로 변할 때 일일이 이벤트 리스너를 다는 것보다 효율적입니다.\n'),(0,239,'2023-11-12 11:13:35.619977',56,16,NULL,'==는 타입이 다르면 타입을 자동으로 변환해서 값을 비교하고 ===는 타입을 변환하지 않고 비교합니다.'),(0,240,'2023-11-12 11:15:19.487941',16,16,NULL,'도메인 네임 시스템으로, 도메인의 주소에 매핑된 실제 아이피 주소를 찾아주는 역할을 합니다.'),(0,242,'2023-11-13 08:53:35.559268',16,61,NULL,'DNS는 Domain Name System의 약자로 사람들이 외우기 힘든 IP 주소를 naver.com과 같이 외우기 쉬운 도메인 이름으로 서버에 접근할 수 있도록 매핑해주는 시스템입니다. 하지만 항상 사용자의 요청마다 DNS에 접근하여 IP를 가져오는 과정에서 과부하가 걸릴 수도 있기 때문에 PC는 다양한 방법으로 도메인에 따른 IP 주소를 캐시에 저장하고 있습니다. 그 캐시에는 IPS, OS, 브라우저 등 다양한 종류가 있습니다.'),(0,243,'2023-11-13 08:54:25.160791',15,61,NULL,'전송해줍니다'),(0,244,'2023-11-13 08:54:59.538389',14,61,NULL,'나눔은 좋습니다.'),(1,245,'2023-11-13 10:04:59.735564',154,2,'2023-11-13 15:06:20.557680','DFS는 깊이우선 탐색으로 트리구조를 예시로 가장 먼저 말단 노드까지 찾아간 이후 한칸씩 부모노드로 돌아오며 다음 자식들을 탐색하는 알고리즘입니다. 반대로 BFS의 경우 한 계층의 자식들을 모두 탐색한 이후 다음 계층을 탐색합니다.'),(0,246,'2023-11-13 10:08:15.343085',121,2,NULL,'원시타입은 int, float, double, char, short, byte, boolean,long의 8종류의 타입으로 메모리 저장시 값 자체를 저장합니다. \n참조타입의 경우 어떤 객체(동적으로 생성된)의 메모리상 주소를 전달하는 것으로 4byte크기를 지닌다.'),(0,247,'2023-11-13 14:46:31.552498',111,61,NULL,'GC는 JVM에서 자동적으로 메모리 관리를 해주는 시스템입니다. 객체를 만들고 오랜기간 사용하지 않거나 참조를 할 수 있는 방법이 없어졌을 경우 자동적으로 메모리 관리를 해주기 때문에 Java 프로그램에서 중요한 역할을 합니다.\n동작 방식으로는 간단하게 young, old 영역이 있는데 young 영역에서 오랜 기간 살아남는 경우 old 영역으로 이동하게 되고 young 영역에서 생긴 가비지는 삭제해줍니다. 이 young 영역에서 발생하는 GC는 minor GC라고 부르고 old 영역에서 발생하는 GC는 major GC라고 부릅니다.'),(0,248,'2023-11-14 10:03:35.509244',138,61,NULL,'WebMvcConfigurer를 implement한 @component에서 addCORS 설정으로 허용 origin을 등록하거나, SpringSecurity에서 CORS 허용 origin 설정을 해줍니다 이때에는 * 문자와 같이 전체 허용보다 origin 하나씩 등록해주는 것이 좋습니다.\n이 두가지 방법을 혼용해서 사용할 경우 충돌이 발생할 수 있으니 하나만 선택하여 CORS 설정을 해줍니다.'),(0,249,'2023-11-14 14:58:47.639227',59,16,NULL,'동기는 코드 순서대로 실행되지만 비동기는 순서가 보장되지 않습니다.'),(0,251,'2023-11-14 17:39:30.430503',140,12,NULL,'콩'),(0,252,'2023-11-15 14:32:19.921413',145,81,NULL,'따뜻한 햇빛, 따스한 바람, 이쁜 꽃'),(1,253,'2023-11-15 14:45:54.586323',129,18,'2023-11-15 14:46:00.416682','뮤터블은 변경이 가능한 객체이고 이뮤터블은 변경이 불가능한 객체'),(1,254,'2023-11-16 14:01:25.941344',132,61,'2023-11-16 20:43:00.865273','콩! java는 커피 커피콩 원두커피 맛있어요!'),(1,255,'2023-11-17 04:07:54.822002',132,52,'2023-11-17 04:47:12.491207','Spring Bean이란 Spring Container에서 관리하는 인스턴스를 의미하며, 보통 하나의 인스턴스로만 존재합니다. Spring Container가 실행되면서 ApplicationContext로부터 메타 데이터와 구성 클래스들을 생성할때 함께 생성됩니다');
/*!40000 ALTER TABLE `answer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `answer_comment`
--

DROP TABLE IF EXISTS `answer_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `answer_comment` (
  `answer_comment_id` bigint NOT NULL AUTO_INCREMENT,
  `answer_id` bigint DEFAULT NULL,
  `created_at` datetime(6) DEFAULT NULL,
  `member_id` bigint DEFAULT NULL,
  `modified_at` datetime(6) DEFAULT NULL,
  `content` text NOT NULL,
  PRIMARY KEY (`answer_comment_id`),
  KEY `FKbi4ojf23mofyyc9wmmslub4ln` (`answer_id`),
  KEY `FK7crcfisk7echi81d8jdce8ouj` (`member_id`),
  CONSTRAINT `FK7crcfisk7echi81d8jdce8ouj` FOREIGN KEY (`member_id`) REFERENCES `member` (`member_id`),
  CONSTRAINT `FKbi4ojf23mofyyc9wmmslub4ln` FOREIGN KEY (`answer_id`) REFERENCES `answer` (`answer_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `answer_comment`
--

LOCK TABLES `answer_comment` WRITE;
/*!40000 ALTER TABLE `answer_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `answer_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `answer_like`
--

DROP TABLE IF EXISTS `answer_like`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `answer_like` (
  `answer_id` bigint NOT NULL,
  `answer_like_id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime(6) DEFAULT NULL,
  `member_id` bigint NOT NULL,
  `modified_at` datetime(6) DEFAULT NULL,
  PRIMARY KEY (`answer_like_id`),
  KEY `FKl7pr13s181idjq8qw2csdc8u9` (`answer_id`),
  KEY `FKng30ghqocc4mn2bl6ulqipgxb` (`member_id`),
  CONSTRAINT `FKl7pr13s181idjq8qw2csdc8u9` FOREIGN KEY (`answer_id`) REFERENCES `answer` (`answer_id`),
  CONSTRAINT `FKng30ghqocc4mn2bl6ulqipgxb` FOREIGN KEY (`member_id`) REFERENCES `member` (`member_id`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `answer_like`
--

LOCK TABLES `answer_like` WRITE;
/*!40000 ALTER TABLE `answer_like` DISABLE KEYS */;
INSERT INTO `answer_like` VALUES (245,26,'2023-11-13 15:06:20.556445',16,NULL),(149,27,'2023-11-13 15:06:49.816120',16,NULL),(187,32,'2023-11-13 15:37:28.140168',16,NULL),(152,39,'2023-11-13 16:31:05.319076',16,NULL),(187,41,'2023-11-15 14:31:51.660985',52,NULL),(253,42,'2023-11-15 14:46:00.415151',18,NULL),(254,43,'2023-11-16 20:43:00.863779',52,NULL),(255,44,'2023-11-17 04:47:12.486787',52,NULL);
/*!40000 ALTER TABLE `answer_like` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `banner`
--

DROP TABLE IF EXISTS `banner`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `banner` (
  `banner_id` bigint NOT NULL AUTO_INCREMENT,
  `banner_image` varchar(255) DEFAULT NULL,
  `link` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`banner_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `banner`
--

LOCK TABLES `banner` WRITE;
/*!40000 ALTER TABLE `banner` DISABLE KEYS */;
/*!40000 ALTER TABLE `banner` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `interview_question`
--

DROP TABLE IF EXISTS `interview_question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `interview_question` (
  `created_at` datetime(6) DEFAULT NULL,
  `interview_question_id` bigint NOT NULL AUTO_INCREMENT,
  `modified_at` datetime(6) DEFAULT NULL,
  `interview_category` varchar(63) DEFAULT NULL,
  `content` text,
  PRIMARY KEY (`interview_question_id`),
  KEY `content` (`content`(16))
) ENGINE=InnoDB AUTO_INCREMENT=183 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `interview_question`
--

LOCK TABLES `interview_question` WRITE;
/*!40000 ALTER TABLE `interview_question` DISABLE KEYS */;
INSERT INTO `interview_question` VALUES ('2023-10-30 13:30:03.682685',2,NULL,'JAVA','JAVA의 장단점을 하나씩 서술해보세요'),('2023-10-30 13:42:52.444424',3,NULL,'OPERATING_SYSTEM','운영체제란 무엇이라고 설명할 수 있나요?'),('2023-10-30 13:42:52.528441',4,NULL,'OPERATING_SYSTEM','프로세스와 스레드의 차이가 무엇인가요?'),('2023-10-30 13:42:52.531604',5,NULL,'OPERATING_SYSTEM','프로세스 생성 과정을 서술하세요'),('2023-10-30 13:42:52.533883',6,NULL,'OPERATING_SYSTEM','멀티 스레드와 멀티 프로세스의 차이는?'),('2023-10-30 13:42:52.536146',7,NULL,'OPERATING_SYSTEM','Context Switching은 무엇일까요?'),('2023-10-30 13:42:52.538453',8,NULL,'OPERATING_SYSTEM','DEAD LOCK을 해결할 수 있는 방법을 서술해보세요'),('2023-10-30 13:42:52.540751',9,NULL,'OPERATING_SYSTEM','RACE CONDITION이란 무엇일까요?'),('2023-10-30 13:42:52.543290',10,NULL,'OPERATING_SYSTEM','선점과 비선점의 차이는 무엇일까요?'),('2023-10-30 13:42:52.545575',11,NULL,'OPERATING_SYSTEM','동시성과 병렬성을 설명해보세요'),('2023-10-30 13:42:52.547575',12,NULL,'OPERATING_SYSTEM','인터럽트에 대해 무엇인지 서술해보세요'),('2023-10-30 13:42:52.551965',13,NULL,'OPERATING_SYSTEM','메모리가 고갈되면 어떤 현상이 발생할까요?'),('2023-10-30 13:48:54.680971',14,NULL,'NETWORK','OSI 7계층, 계층을 왜 나누었을까요?'),('2023-10-30 13:48:54.683444',15,NULL,'NETWORK','전송 계층이 하는 일들을 아는만큼 서술하세요'),('2023-10-30 13:48:54.685280',16,NULL,'NETWORK','DNS란?'),('2023-10-30 13:48:54.687288',17,NULL,'NETWORK','www.naver.com을 접속할 때 일어나는 일을 네트워크 관점에서 설명해보세요'),('2023-10-30 13:48:54.689452',18,NULL,'NETWORK','TCP와 UDP의 차이를 서술해보세요'),('2023-10-30 13:48:54.691151',19,NULL,'NETWORK','HTTP와HTTPS의 차이는?'),('2023-10-30 13:48:54.693054',20,NULL,'NETWORK','HTTP 멱등성을 설명해보세요'),('2023-10-30 13:48:54.694793',21,NULL,'WEB','CORS에 대해 설명해보세요'),('2023-10-30 13:48:54.696474',22,NULL,'NETWORK','REST API에 대해 설명해보세요'),('2023-10-30 13:48:54.698228',23,NULL,'WEB','쿠키와 세션의 차이는?'),('2023-10-30 13:48:54.699764',24,NULL,'WEB','JWT를 설명해보세요'),('2023-10-30 13:52:53.907097',25,NULL,'DATABASE','DBMS란 무엇일까요?'),('2023-10-30 13:52:53.909443',26,NULL,'DATABASE','스키마란 무엇일까요?'),('2023-10-30 13:52:53.911231',27,NULL,'DATABASE','\'키\'의 역할이 무엇일까요?'),('2023-10-30 13:52:53.912902',28,NULL,'DATABASE','트랜잭션을 설명해보세요'),('2023-10-30 13:52:53.914382',29,NULL,'DATABASE','트랜잭션 특징인 ACID에 대해 설명해보세요'),('2023-10-30 13:52:53.915789',30,NULL,'DATABASE','트랜잭션의 격리 수준, 즉 ISOLATION LEVEL에 대해 설명해보세요'),('2023-10-30 13:52:53.917360',31,NULL,'DATABASE','무결성 제약조건에 대해 아는만큼 서술하세요'),('2023-10-30 13:52:53.918818',32,NULL,'DATABASE','조인을 설명해보세요'),('2023-10-30 13:52:53.920277',33,NULL,'DATABASE','인덱스의 역할은 무엇인가요?'),('2023-10-30 13:52:53.921757',34,NULL,'DATABASE','Cluster 인덱스에 대해 설명하세요'),('2023-10-30 13:52:53.923423',35,NULL,'DATABASE','정규화와 반정규화 차이를 설명하세요'),('2023-10-30 14:50:47.886138',36,NULL,'ALGORITHM','버블 정렬(Bubble Sort)에 대해 설명해주세요'),('2023-10-30 14:50:47.928665',37,NULL,'ALGORITHM','동적 계획법(DP, Dynamic Programming)이 갖는 2가지 조건은 무엇인가요?'),('2023-10-30 14:50:47.930599',38,NULL,'ALGORITHM','선택 정렬(Selection Sort)에 대해 설명해주세요'),('2023-10-30 14:50:47.932413',39,NULL,'ALGORITHM','삽입 정렬(Injection Sort)에 대해 설명해주세요'),('2023-10-30 14:50:47.934274',40,NULL,'ALGORITHM','힙 정렬(Heap Sort)에 대해 설명해주세요'),('2023-10-30 14:50:47.935946',41,NULL,'ALGORITHM','병합 정렬(Merge Sort)에 대해 설명해주세요'),('2023-10-30 14:50:47.937679',42,NULL,'ALGORITHM','퀵 정렬(Quick Sort)에 대해 설명해주세요'),('2023-10-30 14:50:47.939554',43,NULL,'ALGORITHM','재귀 알고리즘에 대해 설명해주세요'),('2023-10-30 14:50:47.941363',44,NULL,'ALGORITHM','정렬알고리즘에서 stable 하다는 것은 무엇을 의미하나요?'),('2023-10-30 14:50:47.943065',45,NULL,'ALGORITHM','BFS/DFS 차이는 무엇인가요?'),('2023-10-30 14:50:47.944758',46,NULL,'ALGORITHM','이분탐색이 무엇이고 시간복잡도는 어떻게 되며 그 이유는 무엇인가요?'),('2023-10-30 14:50:47.946454',47,NULL,'ALGORITHM','해쉬(Hash)란 무엇인지 설명해주세요'),('2023-10-30 14:50:47.948130',48,NULL,'ALGORITHM','해시충돌(Hash Collision)을 해결하는 방법에 대해 아는대로 설명해주세요'),('2023-10-30 14:53:25.670836',49,NULL,'JAVASCRIPT','이벤트 위임에 대해 설명해보세요'),('2023-10-30 14:53:25.673277',50,NULL,'JAVASCRIPT','this가 JavaScript에서 어떻게 작동할까요?'),('2023-10-30 14:53:25.675281',51,NULL,'JAVASCRIPT','프로토타입 상속이 어떻게 작동하는지 설명해보세요'),('2023-10-30 14:53:25.677223',52,NULL,'JAVASCRIPT','null, undefined, undeclared의 차이점은 무엇일까요?'),('2023-10-30 14:53:25.678724',53,NULL,'JAVASCRIPT','클로저가 무엇이고 어떻게/왜 사용할까요?'),('2023-10-30 14:53:25.680330',54,NULL,'JAVASCRIPT','호스트 객체와 내장 객체의 차이점은 무엇인가요?'),('2023-10-30 14:53:25.681840',55,NULL,'JAVASCRIPT','호이스팅에 대해 설명하세요'),('2023-10-30 14:53:25.683569',56,NULL,'JAVASCRIPT','\'==\'와 \'===\' 차이점은 무엇일까요?'),('2023-10-30 14:53:25.685108',57,NULL,'JAVASCRIPT','Callback 대신에 Promise를 사용할 때의 장점과 단점은 무엇인가요?'),('2023-10-30 14:53:25.687593',58,NULL,'JAVASCRIPT','mutable과 immutable 객체 사이의 차이점은?'),('2023-10-30 14:53:25.689104',59,NULL,'JAVASCRIPT','동기 함수와 비동기 함수의 차이점을 설명해보세요'),('2023-10-30 14:53:25.690544',60,NULL,'JAVASCRIPT','\'let\', \'var\', \'const\'를 사용하여 생성된 변수들의 차이점은 무엇인가요?'),('2023-10-30 15:01:58.370509',61,NULL,'OPERATING_SYSTEM','사용자 모드와 커널 모드의 차이점이 무엇일까요?'),('2023-10-30 15:01:58.372722',62,NULL,'OPERATING_SYSTEM','커널 수준 스레드의 특징은?'),('2023-10-30 15:01:58.374309',63,NULL,'OPERATING_SYSTEM','사용자 수준 스레드의 특징은?'),('2023-10-30 15:01:58.375899',64,NULL,'OPERATING_SYSTEM','단기, 중기, 장기 스케줄러의 역할을 서술하시오'),('2023-10-30 15:01:58.377466',65,NULL,'OPERATING_SYSTEM','선점 방식에 대해서 설명하세요'),('2023-10-30 15:01:58.379095',66,NULL,'OPERATING_SYSTEM','비선점 방식에 대해서 설명하세요'),('2023-10-30 15:01:58.380704',67,NULL,'OPERATING_SYSTEM','페이징 전략에 대해 설명하세요'),('2023-10-30 15:01:58.382283',68,NULL,'OPERATING_SYSTEM','세그멘테이션 전략에 대해 설명하세요'),('2023-10-30 15:01:58.383788',69,NULL,'OPERATING_SYSTEM','가상 메모리를 사용함으로서 장점은?'),('2023-10-30 15:06:01.632178',70,NULL,'WEB','OAuth를 많이 사용하는데 OAuth가 무엇일까요?'),('2023-10-30 15:06:01.634312',71,NULL,'NETWORK','\'URI\'와 \'URL\'은 무엇이 다를까요?'),('2023-10-30 15:06:01.636015',72,NULL,'NETWORK','4 way-hand shaking을 설명하세요'),('2023-10-30 15:08:07.608156',73,NULL,'NETWORK','Server에서 FIN 플래그를 전송하기 전에 Routing지연이나 패킷 유실로 인한 재전송으로 FIN 패킷보다 늦게 도착한 상황이 발생하면 어떤 동작이 일어날까요?'),('2023-10-30 15:18:09.248525',74,NULL,'SPRING','Spring MVC 구조 흐름에 대해 과정대로 설명해주세요'),('2023-10-30 15:18:09.250519',75,NULL,'SPRING','Spring DI에 대해 설명해주세요'),('2023-10-30 15:18:09.251954',76,NULL,'SPRING','Spring과 Spring Boot의 차이점에 대해 설명해주세요'),('2023-10-30 15:18:09.253386',77,NULL,'SPRING','Filter와 Interceptor의 차이점에 대해 설명해주세요'),('2023-10-30 15:18:09.254934',78,NULL,'SPRING','Spring 영속성 컨텍스트에 대해 설명해주세요'),('2023-10-30 15:18:09.256451',79,NULL,'SPRING','Spring에서 CORS 에러를 해결하기 위해 했던 방법은 무엇인가요?'),('2023-10-30 15:18:09.258023',80,NULL,'SPRING','Bean/Component 어노테이션은 무엇이며, 둘의 차이점은 무엇인가요?'),('2023-10-30 15:18:09.259771',81,NULL,'SPRING','Spring Triangle에 대해 설명해주세요'),('2023-10-30 15:18:09.261205',82,NULL,'SPRING','Hibernate에 대해서 설명하세요'),('2023-10-30 15:18:09.262609',83,NULL,'SPRING','Bean의 생명주기에 대해 설명해주세요'),('2023-10-30 15:18:09.263990',84,NULL,'SPRING','Bean scope에 대해 설명해주세요'),('2023-10-30 15:18:09.265456',85,NULL,'SPRING','Spring에서 제공하는 대표적인 Annotation 몇 가지만 예를 들어주세요'),('2023-10-30 15:18:09.267022',86,NULL,'SPRING','Spring의 레이어드 아키텍처에 대해 설명해주세요'),('2023-10-30 15:18:09.268520',87,NULL,'SPRING','커넥션 풀이 무엇인지, Springboot에서의 커넥션 풀로는 어떤 것을 사용하는지 설명해주세요'),('2023-10-30 15:18:09.269958',88,NULL,'SPRING','디스패처 서블릿(Dispatcher Servlet)에 대해 설명해주세요'),('2023-10-30 15:18:09.271473',89,NULL,'SPRING','@Controller와 @RestController의 차이에 대해 설명해주세요'),('2023-10-30 15:41:11.325442',90,NULL,'DATA_STRUCTURE','스택과 큐의 차이는 무엇일까요?'),('2023-10-30 15:41:11.327657',91,NULL,'DATA_STRUCTURE','스택, 큐, 트리, 힙의 구조를 설명해주세요'),('2023-10-30 15:41:11.329076',92,NULL,'DATA_STRUCTURE','Array와 LinkedList의 차이를 설명해주세요'),('2023-10-30 15:41:11.330460',93,NULL,'DATA_STRUCTURE','우선순위 큐의 작동구조와 시간 복잡도를 설명해주세요'),('2023-10-30 15:41:11.331789',94,NULL,'DATA_STRUCTURE','배열(Array)에 대해 설명해주세요'),('2023-10-30 15:41:11.333192',95,NULL,'DATA_STRUCTURE','연결 리스트(Linked List)에 대해 설명해주세요'),('2023-11-03 16:13:16.418920',96,NULL,'DATABASE','DDL, DML, DCL 아는대로 말해주세요.'),('2023-11-03 16:13:16.451040',97,NULL,'DATABASE','트랜잭션을 병행으로 처리할 때 발생할 수 있는 문제점과 이를 방지하기 위한 방법을 설명해보세요'),('2023-11-03 16:13:16.453042',98,NULL,'DATABASE','트랜잭션에 의해 발생할 수 있는 데드락에 대해 설명해보세요'),('2023-11-03 16:13:16.454587',99,NULL,'DATABASE','COMMIT과 ROLLBACK에 대해 설명해주세요'),('2023-11-03 16:13:16.456006',100,NULL,'DATABASE','SQL vs NOSQL에 대해서 설명해주세요'),('2023-11-03 16:13:16.457385',101,NULL,'DATABASE','Eventual Consistency에 대해서 설명해주세요'),('2023-11-03 16:13:16.458754',102,NULL,'DATABASE','MySQL InnoDB의 특징과 MyISAM과의 차이는 무엇일까요?'),('2023-11-03 16:13:16.460348',103,NULL,'DATABASE','InnoDB의 버퍼 풀에 대해서 설명해주세요'),('2023-11-03 16:13:16.461905',104,NULL,'DATABASE','오라클과 MySQL의 차이에 대해서 설명해주세요'),('2023-11-03 16:13:16.463203',105,NULL,'DATABASE','primary key가 손실되었을 경우 다른 테이블과 어떻게 관계를 맺을 것인가요?'),('2023-11-03 16:13:16.464499',106,NULL,'DATABASE','MySQL DB에서 Oracle로 마이그레이션하는 방식을 설명해주세요'),('2023-11-03 16:18:36.369376',107,NULL,'JAVA','객체지향언어 특징을 설명해주세요'),('2023-11-03 16:18:36.371263',108,NULL,'JAVA','SOLID 에 대해서 설명해주세요'),('2023-11-03 16:18:36.372538',109,NULL,'JAVA','JDK와 JRE의 차이점을 설명하세요'),('2023-11-03 16:18:36.373821',110,NULL,'JAVA','java heap 메모리와 stack 메모리에 대해서 설명해주세요'),('2023-11-03 16:18:36.375360',111,NULL,'JAVA','GC가 무엇인지, 필요한 이유는 무엇인지, 동작방식에 대해 설명해주세요'),('2023-11-03 16:18:36.376830',112,NULL,'JAVA','컬렉션 프레임워크에 대해서 설명해주세요'),('2023-11-03 16:18:36.378143',113,NULL,'JAVA','제네릭에 대해서 설명해주세요'),('2023-11-03 16:18:36.379422',114,NULL,'JAVA','어노테이션에 대해서 설명해주세요'),('2023-11-03 16:18:36.380724',115,NULL,'JAVA','인터페이스와 추상클래스의 차이점에 대해 설명해주세요'),('2023-11-03 16:18:36.382664',116,NULL,'JAVA','클래스는 무엇이고 객체는 무엇인가요?'),('2023-11-03 16:18:36.383896',117,NULL,'JAVA','정적(static)이란 무엇인가요?'),('2023-11-03 16:18:36.385142',118,NULL,'JAVA','자바의 원시타입들은 무엇이 있으며 각각 몇 바이트를 차지하나요?'),('2023-11-03 16:18:36.386330',119,NULL,'JAVA','접근 제어자의 종류와 이에 대해 설명해주세요'),('2023-11-03 16:18:36.387660',120,NULL,'JAVA','동일성(identity)와 동등성(equality)에 대해 설명해주세요. (equals(), ==)'),('2023-11-03 16:18:36.388996',121,NULL,'JAVA','원시타입과 참조타입의 차이에 대해 설명해주세요'),('2023-11-03 16:18:36.390637',122,NULL,'JAVA','String, StringBuilder, StringBuffer 각각의 차이에 대해 설명해주세요'),('2023-11-03 16:18:36.392011',123,NULL,'JAVA','Checked Exception과 Unchecked Exception에 대해 설명해주세요'),('2023-11-03 16:18:36.393361',124,NULL,'JAVA','Java8에서 추가된 기능에 대해서 설명해주세요'),('2023-11-03 16:18:36.394706',125,NULL,'JAVA','try-with-resource에 대해서 설명해주세요'),('2023-11-03 16:18:36.396133',126,NULL,'JAVA','강한 결합과 느슨한 결합이 무엇인지 설명해주세요'),('2023-11-03 16:18:36.397352',127,NULL,'JAVA','직렬화와 역직렬화에 대해서 설명해주세요'),('2023-11-03 16:18:36.398570',128,NULL,'JAVA','자바의 동시성 이슈(공유자원 접근)에 대해 설명해주세요'),('2023-11-03 16:18:36.399859',129,NULL,'JAVA','Mutable 객체와 Immutable 객체의 차이점에 대해 설명해주세요'),('2023-11-03 16:18:36.401084',130,NULL,'JAVA','자바에서 null을 안전하게 다루는 방법에 대해 설명해주세요'),('2023-11-03 16:28:48.895392',131,NULL,'SPRING','Spring DI/IoC는 어떻게 동작하나요?'),('2023-11-03 16:28:48.897368',132,NULL,'SPRING','Spring Bean이란 무엇인가요?스프링 Bean의 생성 과정을 설명해주세요'),('2023-11-03 16:28:48.898635',133,NULL,'SPRING','스프링 Bean의 Scope에 대해서 설명해주세요.IoC 컨테이너의 역할은 무엇이 있을까요?'),('2023-11-03 16:28:48.899840',134,NULL,'SPRING','DI 종류는 어떤것이 있고, 이들의 차이는 무엇인가요?'),('2023-11-03 16:28:48.901084',135,NULL,'SPRING','Autowiring 과정에 대해서 설명해주세요.'),('2023-11-03 16:28:48.902469',136,NULL,'SPRING','Spring Web MVC의 Dispatcher Servlet의 동작 원리에 대해서 간단히 설명해주세요.프론트 컨트롤러 패턴이란 무엇인가요?'),('2023-11-03 16:28:48.903657',137,NULL,'SPRING','Servlet Filter와 Spring Interceptor의 차이는 무엇인가요?'),('2023-11-03 16:28:48.904846',138,NULL,'SPRING','Spring에서 CORS 에러를 해결하기 위한 방법을 설명해주세요'),('2023-11-03 16:28:48.906009',139,NULL,'SPRING','Bean/Component 어노테이션에 대해서 설명해주시고, 둘의 차이점에 대해 설명해주세요'),('2023-11-03 16:28:48.907107',140,NULL,'SPRING','POJO란 무엇인가요? Spring Framework에서 POJO는 무엇이 될 수 있을까요?'),('2023-11-03 16:28:48.908219',141,NULL,'SPRING','Spring Web MVC에서 요청 마다 Thread가 생성되어 Controller를 통해 요청을 수행할텐데, 어떻게 1개의 Controller만 생성될 수 있을까요?'),('2023-11-03 16:28:48.909322',142,NULL,'SPRING','Filter는 Servlet의 스펙이고, Interceptor는 Spring MVC의 스펙입니다. Spring Application에서 Filter와 Interceptor를 통해 예외를 처리할 경우 어떻게 해야 할까요?'),('2023-11-03 16:28:48.910471',143,NULL,'SPRING','Spring Application을 구동할 때 메서드를 실행시키는 방법에 대해 설명해주세요'),('2023-11-03 16:28:48.914185',144,NULL,'SPRING','의존성과 설정값을 생성자 인자로 주입해야 하는 이유에 대해 설명해주세요'),('2023-11-03 16:28:48.915475',145,NULL,'SPRING','Spring의 3대 요소에 대해서 설명해주세요'),('2023-11-03 16:29:46.148396',146,NULL,'SPRING','JPA 영속성 컨텍스트의 이점(5가지)을 설명해주세요'),('2023-11-03 16:29:46.150148',147,NULL,'SPRING','JPA Propagation 전파단계를 설명해주세요'),('2023-11-03 16:29:46.151239',148,NULL,'SPRING','JPA를 쓴다면 그 이유에 대해서 설명해주세요'),('2023-11-03 16:30:28.327883',150,NULL,'WEB','Same-Site와 Same-Origin의 차이는 무엇일까요?'),('2023-11-03 16:30:28.329072',151,NULL,'WEB','토큰과 세션의 장단점은 무엇일까요?'),('2023-11-03 16:32:41.705637',152,NULL,'ALGORITHM','BST의 최악의 경우의 예와 시간복잡도에 대해서 설명해주세요'),('2023-11-03 16:32:41.707306',153,NULL,'ALGORITHM','피보나치 수열을 코드로 구현하는 방법에 대해서 설명해주세요'),('2023-11-03 16:32:41.708417',154,NULL,'ALGORITHM','DFS, BFS에 대해서 설명해주세요'),('2023-11-03 16:32:41.709561',155,NULL,'ALGORITHM','재귀와 반복문의 차이 설명해주세요'),('2023-11-03 16:32:41.710692',156,NULL,'ALGORITHM','B-Tree에 대해서 설명해주세요'),('2023-11-03 16:32:41.711688',157,NULL,'ALGORITHM','B+Tree에 대해서 설명해주세요'),('2023-11-03 16:32:41.712729',158,NULL,'ALGORITHM','동적계획법 적용 가능 조건 두 가지를 설명해보세요'),('2023-11-03 16:33:23.936454',159,NULL,'NETWORK','웹 서버 소프트웨어(Apache, Nginx)는 OSI 7계층 중 어디서 작동하는지 설명해보세요'),('2023-11-03 16:33:23.938104',160,NULL,'NETWORK','웹 서버 소프트웨어(Apache, Nginx)의 서버 간 라우팅 기능은 OSI 7계층 중 어디서 작동하는지 설명해보세요'),('2023-11-10 09:52:47.696719',161,NULL,'WEB','브라우저의 렌더링 과정에 대해 설명해주세요.'),('2023-11-10 09:52:47.700595',162,NULL,'WEB','BOM에 대해 설명해주세요.'),('2023-11-10 09:52:47.701517',163,NULL,'WEB','DOM에 대해 설명해주세요.'),('2023-11-10 10:43:15.246554',164,NULL,'DATA_STRUCTURE','자료구조가 무엇인지 말씀해주세요.'),('2023-11-10 10:43:15.247985',165,NULL,'DATA_STRUCTURE','선형 자료구조와 비선형 자료구조의 차이가 무엇인가요?'),('2023-11-10 10:43:15.248930',166,NULL,'DATA_STRUCTURE','A-B-C-D 순서로 연결된 연결 리스트가 있습니다. C 노드 다음에 F 노드를 삽입할 때의 과정을 설명해주세요.'),('2023-11-10 10:43:15.249789',167,NULL,'DATA_STRUCTURE','스택으로 큐를 구현할 수 있을까요?'),('2023-11-10 10:43:15.250614',168,NULL,'DATA_STRUCTURE','큐로 스택을 구현할 수 있을까요?'),('2023-11-10 10:43:15.251862',169,NULL,'DATA_STRUCTURE','큐와 덱의 차이점은 무엇일까요?'),('2023-11-10 10:43:15.252743',170,NULL,'DATA_STRUCTURE','큐보다 덱을 사용했을 때 더 효율적인 경우가 있을까요?'),('2023-11-10 10:43:15.253575',171,NULL,'DATA_STRUCTURE','트리라는 자료구조가 무엇인지 간략하게 한 줄로 설명해보세요.'),('2023-11-10 10:43:15.254476',172,NULL,'DATA_STRUCTURE','트리의 용어중 \'깊이\' 라는 용어의 정의는 무엇인가요?'),('2023-11-10 10:43:15.255338',173,NULL,'DATA_STRUCTURE','포화 이진트리와 완전 이진트리의 차이점은 무엇인가요?'),('2023-11-10 10:43:15.256351',174,NULL,'DATA_STRUCTURE','트리의 순회에 대해 알고있는 것 한 가지 말해주세요.'),('2023-11-10 10:43:15.257235',175,NULL,'DATA_STRUCTURE','구간합 문제를 누적합으로 풀이한다면, 단점은 무엇이며 그에 비해 인덱스 트리가 갖는 장점은 무엇인지 시간복잡도를 들어 설명해주세요.'),('2023-11-10 10:43:15.258079',176,NULL,'DATA_STRUCTURE','인덱스 트리에서 삽입이 일어날때의 시간복잡도는 몇인가요?'),('2023-11-10 10:43:15.258955',177,NULL,'DATA_STRUCTURE','자료구조에서 Heap에 대해 설명해보세요'),('2023-11-10 10:43:15.260885',178,NULL,'DATA_STRUCTURE','자료구조중 하나인 Heap 구조에서 삭제연산이 일어났을떄 Heap의 변화를 서술하세요'),('2023-11-10 10:57:06.605084',179,NULL,'WEB','reverse proxy란 무엇인가요?'),('2023-11-10 11:03:13.079452',180,NULL,'DATA_STRUCTURE','자료구조에서 Map vs Tree Map에 대해 설명해보세요'),('2023-11-10 11:06:43.673060',181,NULL,'OPERATING_SYSTEM','Heap Memory에 대해서 아는대로 설명해주세요'),('2023-11-10 11:07:08.559766',182,NULL,'DATA_STRUCTURE','코딩 테스트에서 Vector를 많이 쓰셨던데 실제로 Vector가 어떻게 동작하는지 아시나요?');
/*!40000 ALTER TABLE `interview_question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `interview_question_of_corporation`
--

DROP TABLE IF EXISTS `interview_question_of_corporation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `interview_question_of_corporation` (
  `interview_question_of_corporation_id` bigint NOT NULL AUTO_INCREMENT,
  `created_at` datetime(6) DEFAULT NULL,
  `modified_at` datetime(6) DEFAULT NULL,
  `corporation_type` varchar(63) NOT NULL,
  `interview_question_id` bigint NOT NULL,
  PRIMARY KEY (`interview_question_of_corporation_id`),
  KEY `FKiiyxh2260sxcat0ethjmacmpm` (`interview_question_id`),
  CONSTRAINT `FKiiyxh2260sxcat0ethjmacmpm` FOREIGN KEY (`interview_question_id`) REFERENCES `interview_question` (`interview_question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `interview_question_of_corporation`
--

LOCK TABLES `interview_question_of_corporation` WRITE;
/*!40000 ALTER TABLE `interview_question_of_corporation` DISABLE KEYS */;
INSERT INTO `interview_question_of_corporation` VALUES (1,'2023-11-06 16:57:35.000000',NULL,'NAVER',158),(2,'2023-11-06 17:23:27.000000',NULL,'SAMSUNG',158),(3,'2023-11-06 17:44:39.000000',NULL,'SAMSUNG',157),(5,NULL,NULL,'LINE_PLUS',179),(6,NULL,NULL,'LINE_PLUS',18),(7,NULL,NULL,'LINE_PLUS',22),(8,NULL,NULL,'LINE_PLUS',180),(9,NULL,NULL,'NAVER',17),(10,NULL,NULL,'NAVER',22),(11,NULL,NULL,'NAVER',19),(12,NULL,NULL,'NAVER',75),(13,NULL,NULL,'NAVER',145),(14,NULL,NULL,'NAVER',111),(15,NULL,NULL,'LINE_PLUS',72),(16,NULL,NULL,'LINE_PLUS',7),(17,NULL,NULL,'SAMSUNG',30),(18,NULL,NULL,'SAMSUNG',29);
/*!40000 ALTER TABLE `interview_question_of_corporation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `interview_question_scrap`
--

DROP TABLE IF EXISTS `interview_question_scrap`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `interview_question_scrap` (
  `created_at` datetime(6) DEFAULT NULL,
  `interview_question_id` bigint NOT NULL,
  `interview_question_scrap_id` bigint NOT NULL AUTO_INCREMENT,
  `member_id` bigint NOT NULL,
  `modified_at` datetime(6) DEFAULT NULL,
  PRIMARY KEY (`interview_question_scrap_id`),
  KEY `FKs0rkj6x07c10i6nmrt3ps7f18` (`interview_question_id`),
  KEY `FKmuqa6yw7uwx8jse8o6cpddktx` (`member_id`),
  CONSTRAINT `FKmuqa6yw7uwx8jse8o6cpddktx` FOREIGN KEY (`member_id`) REFERENCES `member` (`member_id`),
  CONSTRAINT `FKs0rkj6x07c10i6nmrt3ps7f18` FOREIGN KEY (`interview_question_id`) REFERENCES `interview_question` (`interview_question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `interview_question_scrap`
--

LOCK TABLES `interview_question_scrap` WRITE;
/*!40000 ALTER TABLE `interview_question_scrap` DISABLE KEYS */;
INSERT INTO `interview_question_scrap` VALUES ('2023-11-06 04:50:57.000000',2,2,1,'2023-11-06 04:50:57.000000'),('2023-11-07 12:51:18.807122',21,26,2,NULL),('2023-11-07 12:51:33.656005',160,27,2,NULL),('2023-11-07 12:51:46.407521',156,28,2,NULL),('2023-11-07 12:51:49.186350',153,29,2,NULL),('2023-11-07 12:51:51.648361',151,30,2,NULL),('2023-11-07 12:51:55.644757',150,31,2,NULL),('2023-11-07 12:51:58.558660',154,32,2,NULL),('2023-11-07 12:52:05.102584',118,33,2,NULL),('2023-11-07 12:52:09.537063',111,34,2,NULL),('2023-11-07 12:52:14.248842',3,35,2,NULL),('2023-11-07 12:52:27.053455',159,36,2,NULL),('2023-11-07 12:52:29.630517',157,37,2,NULL),('2023-11-07 12:52:32.880973',127,38,2,NULL),('2023-11-07 12:52:36.711818',121,39,2,NULL),('2023-11-07 12:52:41.752694',138,40,2,NULL),('2023-11-07 13:11:19.817485',24,41,2,NULL),('2023-11-07 13:11:27.211554',18,42,2,NULL),('2023-11-07 13:11:33.947459',14,43,2,NULL),('2023-11-07 13:11:42.558882',16,44,2,NULL),('2023-11-07 13:19:40.517898',158,45,2,NULL),('2023-11-07 15:52:30.039843',19,46,2,NULL),('2023-11-07 20:47:04.347197',21,47,21,NULL),('2023-11-09 09:59:14.055369',17,55,2,NULL),('2023-11-09 14:06:22.958762',160,61,52,NULL),('2023-11-09 14:06:25.450385',159,62,52,NULL),('2023-11-09 14:06:27.328501',158,63,52,NULL),('2023-11-09 14:06:29.683656',157,64,52,NULL),('2023-11-09 14:06:32.298481',156,65,52,NULL),('2023-11-09 14:06:35.624089',155,68,52,NULL),('2023-11-09 14:07:03.295978',17,69,52,NULL),('2023-11-10 17:15:24.138487',17,70,76,NULL),('2023-11-13 07:48:01.750763',157,71,78,NULL),('2023-11-13 10:05:15.227165',22,72,25,NULL),('2023-11-13 11:06:40.143262',36,73,16,NULL),('2023-11-13 11:21:33.051812',130,74,25,NULL);
/*!40000 ALTER TABLE `interview_question_scrap` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `member`
--

DROP TABLE IF EXISTS `member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `member` (
  `created_at` datetime(6) DEFAULT NULL,
  `member_id` bigint NOT NULL AUTO_INCREMENT,
  `member_streak_id` bigint NOT NULL,
  `modified_at` datetime(6) DEFAULT NULL,
  `nickname` varchar(16) DEFAULT NULL,
  `emoji` varchar(255) DEFAULT NULL,
  `login_id` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `role_type` enum('ADMIN','USER') DEFAULT NULL,
  PRIMARY KEY (`member_id`),
  UNIQUE KEY `UK_jfh5xsvb4op148bhr000a15vm` (`member_streak_id`),
  UNIQUE KEY `UK_enfm5patwjqulw8k4wwuo6f60` (`login_id`),
  CONSTRAINT `FK37eqbf5sd250qy8ujb0o31t2e` FOREIGN KEY (`member_streak_id`) REFERENCES `member_streak` (`member_streak_id`)
) ENGINE=InnoDB AUTO_INCREMENT=88 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `member`
--

LOCK TABLES `member` WRITE;
/*!40000 ALTER TABLE `member` DISABLE KEYS */;
INSERT INTO `member` VALUES ('2023-10-30 16:44:15.659761',1,1,NULL,'잠꼬대하는 김밥말이','?','4y19olfINtak9xYgWxDx/g==','BXVoENJw9azbMidJlz3a1g==','USER'),('2023-10-31 15:28:38.418688',2,2,'2023-11-07 13:29:31.351399','운명을 기다리는 알라딘','?','6dvWmzKX/V8miKG+sVjVLQ==','6dvWmzKX/V8miKG+sVjVLQ==','USER'),('2023-11-01 10:12:47.911649',6,10,'2023-11-01 10:15:29.788173','감 떨어진 프로자취러','?','kEiHbKWUHKZd5hlUnhTYrg==','KTMg8AlYTPGRm+KOb56VPQ==','USER'),('2023-11-03 14:35:24.967915',11,15,NULL,'기분 좋은 드라큘라','?','o1G5Ux2N2/v4jfuoKR5HjQ==','C2mYxdLC1tYzFi7LFonQtg==','USER'),('2023-11-03 14:59:17.953802',12,16,'2023-11-10 08:44:43.855941','108배 하는 건물주','?','eMCicZgCA7oVZjx6iZ+XYg==','eMCicZgCA7oVZjx6iZ+XYg==','USER'),('2023-11-06 11:12:01.645441',13,17,NULL,'불면증 걸린 주사기','?','f2b6hyRr7pcNXJUSFz8XNA==','f2b6hyRr7pcNXJUSFz8XNA==','USER'),('2023-11-06 13:05:49.263784',16,20,'2023-11-10 20:09:17.441661','행복한 강아지','?','S+2kZ3mbkQeMvhGfmN+kEQ==','S+2kZ3mbkQeMvhGfmN+kEQ==','USER'),('2023-11-06 13:06:30.412131',17,21,NULL,'파자마를 입은 드라이버','?','kwQ+EioSCqaL/rGWRuxANw==','CcOuWcNs2Pl5iBr2m8rb6Q==','USER'),('2023-11-06 14:27:00.508003',18,22,NULL,'꼼지락거리는 빠삐용','?','gtYW+OUJJOcBfFopb1+Usw==','U6qwm6D6hCCykugWTJXudQ==','USER'),('2023-11-06 14:29:44.718645',19,23,'2023-11-06 15:42:17.264145','배부른 유튜버','?','LLRV5I1itLVJFH0DDJggWQ==','JA59nJ3rKuSrV8hUqGe0lA==','USER'),('2023-11-06 15:24:29.662188',20,24,NULL,'국토대장정하는 마스크','?','K92ezOg/9S+5/5bPhcLDnw==','K92ezOg/9S+5/5bPhcLDnw==','USER'),('2023-11-06 19:14:57.268484',21,25,'2023-11-07 21:02:20.309193','고시공부하는 마법사','?','kuiwmzt7nDiRkk76oY/FVw==','kuiwmzt7nDiRkk76oY/FVw==','USER'),('2023-11-08 10:35:08.389003',24,28,NULL,'화가 많은 원숭이띠','?','23Dt31F6iwcJEkVO1gU3iA==','23Dt31F6iwcJEkVO1gU3iA==','USER'),('2023-11-09 09:34:01.910358',25,29,NULL,'물풍선을 좋아하는 옷장','?','ciaPs33Da7rdiNWIoKpfWg==','d2DiUklbQ9Vo7aakee1X3Q==','USER'),('2023-11-09 10:00:14.525101',26,30,NULL,'바쁜척하는 공유오피스','?','N/25mkAkDGaMljZ//FY3xQ==','N/25mkAkDGaMljZ//FY3xQ==','USER'),('2023-11-09 11:53:38.100368',27,31,NULL,'쏟아진 타이슨','?','ON3WimZKKbFgLMZYhuz1Rg==','ON3WimZKKbFgLMZYhuz1Rg==','USER'),('2023-11-09 11:58:10.327822',28,32,'2023-11-09 12:03:40.024151','결벽증있는 정원사','?','j75VXtT6XGwqBPG4jCYYhw==','JHkIn2jJ8Z6YyhIyoAtmMg==','USER'),('2023-11-09 11:59:42.644182',29,33,NULL,'안달난 신입사원','?','EN9vvl5uQ+eqTSIS/HXdLg==','o0CgwGi+Y9saUfWSPcBunA==','USER'),('2023-11-09 12:02:49.843290',30,34,'2023-11-09 15:25:40.750212','일 하기 싫은 아보카도','?','hE9p5yDBWfr9qzKIVMAf3g==','hE9p5yDBWfr9qzKIVMAf3g==','USER'),('2023-11-09 12:36:24.953851',31,35,NULL,'서핑하는 스폰지밥','?','D/yXdvWvdOdJ30uj9DN1Dg==','Gy1lxRUiYJQE4eEcuOzg9w==','USER'),('2023-11-09 12:38:39.636671',38,42,NULL,'커피 쏟은 천문대','?','T65HsMDn99xm6PRymlvXkA==','PNLbiPOV6Hh6nHp/4wV6rw==','USER'),('2023-11-09 12:52:01.660785',51,55,NULL,'학사경고 받은 약장수','?','bbh4xQ/UzUKD4o/Sn5U3ag==','4eiwfe4iuDR4MC5tRgscMg==','USER'),('2023-11-09 13:30:11.242760',52,56,'2023-11-17 04:54:28.704323','기분 좋은 댄싱머신','?','/NR5ji9MSCHKwb4lD1sQEA==','5TUW+0lGbd8huOKWRqU+HA==','USER'),('2023-11-09 14:36:09.926077',53,57,NULL,'고민중인 네비게이션','?','at2n5FzsFQ5TZMHoLSBShA==','f2b6hyRr7pcNXJUSFz8XNA==','USER'),('2023-11-09 14:37:10.151899',54,58,NULL,'고조선 시대의 김대리','?','S6k3+NQOMW6WjM2fgix/cQ==','Z8fWSg18SPfvy2CjY10FRg==','USER'),('2023-11-09 15:16:45.181237',55,59,'2023-11-09 15:26:37.005939','웃음소리 이상한 건물주','?','Fj5ut+5tOvi2J1P7zMGfFA==','/SZGp1WkccGAYQDnWvqisw==','USER'),('2023-11-09 15:31:28.637960',56,60,NULL,'한숨쉬는 스크류바','?','nWG/hndCUO5hoMVSWbLwpg==','nWG/hndCUO5hoMVSWbLwpg==','USER'),('2023-11-09 15:34:59.379301',57,61,NULL,'전성기를 맞은 사랑꾼','?','7pkUhGqhIhJ/5OA1HjmVQw==','9wQvq9PiKHR5Ipseo9SlIg==','USER'),('2023-11-09 15:42:50.004937',58,62,NULL,'무지갯빛 천칭자리','?','Va4Uw/xvTP5+M8gqHSc9TQ==','fhcNFrC+Cu39yVpcReBGZw==','USER'),('2023-11-09 16:06:15.104749',59,63,NULL,'잔소리하는 종이학','?','csxkL/eReWIlMPkyLxmaww==','csxkL/eReWIlMPkyLxmaww==','USER'),('2023-11-10 09:51:28.337104',61,65,NULL,'막돼먹은 메모장','?','jvB78AnbNY+ky1TFz1UDLg==','jvB78AnbNY+ky1TFz1UDLg==','USER'),('2023-11-10 15:24:32.551266',62,66,NULL,'귀여운 순살치킨','?','I8inZP+xxNtXCKDJskTRqQ==','alAjFBAhG2GrU4UMbFn+JA==','USER'),('2023-11-10 15:24:38.581666',63,67,NULL,'혼란스러운 자동차','?','Z/Eu29tI6bZT5xfK9fin+g==','9xetEtoUMJRhZN1CHdYjTQ==','USER'),('2023-11-10 15:24:39.353656',64,68,NULL,'상처받은 둘리','?','YLtLO7V0SSa5rOC80uUyNA==','vLAlZU5UymMNvF2uB7zZ1g==','USER'),('2023-11-10 15:24:51.744566',65,69,NULL,'다이빙하는 페이커','?','4lNlx94H4vJAgeuEZzuvUA==','nIAGewTrilSoiItjxgg5mA==','USER'),('2023-11-10 15:26:24.630214',66,70,NULL,'나약해빠진 마스크팩','?','oOdeJvIYJ5IjkT7i4FEGng==','oOdeJvIYJ5IjkT7i4FEGng==','USER'),('2023-11-10 15:27:38.853497',67,71,NULL,'귀여운 리오넬메시','?','S1d9pHXmQ50eyvdwC+q7iw==','diOuUOXIVMKN13g3V/o88w==','USER'),('2023-11-10 15:34:44.382223',68,72,NULL,'두근두근한 얼죽아','?','osQf17bxlPBVbhGuFW7iLw==','1dT4y2zZBXAGDZCJd+d3Sg==','USER'),('2023-11-10 15:47:03.897721',69,73,NULL,'염탐하는 비비빅','?','/R+XlESUZk7DOm6WgT2o4Q==','XEpcX4CQrBCgurzgZhsw6A==','USER'),('2023-11-10 15:54:30.567644',70,74,'2023-11-10 15:57:15.995337','투샷 추가한 립밤','?','qIbDWi5VfG3NE9g9hZ6vzw==','BmLyMqrEKcwKzha1OvEZVQ==','USER'),('2023-11-10 16:19:27.426772',71,75,NULL,'쿨찐 만렙 찍은 혁명가','?','lWxKNFb1v+Oy1BW8AKVXbw==','xc2A67/F3qVYMg8/R//OmQ==','USER'),('2023-11-10 16:21:21.266510',72,76,NULL,'뒤로 걷는 밀크쉐이크','?','cYRnopfv5IxnZy7xuyLlxA==','XKtMwfsqii+MpP1+VnYWiQ==','USER'),('2023-11-10 16:24:12.907338',73,77,NULL,'스쿼트 하는 키오스크','?','Rp30AeA8XSakuc19VmM01w==','PhiiIXcC6eQVXCZWMBaFmw==','USER'),('2023-11-10 16:26:32.856117',74,78,NULL,'쏘맥타는 새우깡','?','+gkoL+GJO1Sx2yKvC2hB2g==','Rhvx8S/Gog2YvCANYw2MvA==','USER'),('2023-11-10 17:11:57.505301',75,79,NULL,'알고보면 똑똑한 사자','?','gdznSDz2T5e7vlPhqiTr3g==','PHWS7Oi9JS3d8FbtQOt42w==','USER'),('2023-11-10 17:13:33.751679',76,80,NULL,'기력없는 아인슈타인','?','SF3AIuUBgaqVsvXEUo0u9w==','5y0L77oyy7asQAmhsmiR1w==','USER'),('2023-11-11 06:36:57.798458',77,81,NULL,'숙취에 쩔은 제시카','?','ZHWx6EMtZiwhPVI63/foIg==','CmqxtFgntd1ZYh559TQlvg==','USER'),('2023-11-13 07:43:35.566967',78,82,NULL,'머리를 긁적이는 고모','?','760MwuZhdOA2ja2lpNw9ww==','3+fE74mMSaMdlsWIgKtWIQ==','USER'),('2023-11-13 12:06:47.914293',79,83,NULL,'액정이 깨진 프로레슬러','?','CKfD8FaR3+AVsmxMQLNN1Q==','CKfD8FaR3+AVsmxMQLNN1Q==','USER'),('2023-11-15 14:30:48.726696',80,84,NULL,'금사빠인 동방박사','?','kd4pQqY1G+kMFc2O9HJjhA==','s33MzVGuvnA2OkUQuGcqcg==','USER'),('2023-11-15 14:31:22.009451',81,85,NULL,'물풍선을 좋아하는 옷장','?','JbI5RUSRpCn/b4raQcnZxA==','HOjYbbsSsXv67GIjH7QQ8A==','USER'),('2023-11-15 14:32:18.069455',82,86,NULL,'염주를 착용한 말티즈','?','3yQmLvnvLtrv20mxIz6qoQ==','9vhSLOX3zAtBTHrubnupvQ==','USER'),('2023-11-15 14:52:07.959225',83,87,NULL,'장염 걸린 파리지앵','?','rLG9mzU5Gfx534bcU7pp7A==','rLG9mzU5Gfx534bcU7pp7A==','USER'),('2023-11-15 15:47:10.250402',84,88,NULL,'틀니낀 에펠탑','?','SKaLT2LIEDf5bwNB7maRng==','pkgBQiUy3OeIbPnUJiE64w==','USER'),('2023-11-16 08:31:36.108016',85,89,NULL,'뜨개질하는 아싸','?','LZ+SKTeIMlHZG0yhky8cMw==','t9kmpQA5KhCBUPjqujGC9A==','USER'),('2023-11-16 09:18:26.251887',86,90,NULL,'택배를 받은 두더지','?','fWK333OUPBcED8JbV8kQ7g==','fWK333OUPBcED8JbV8kQ7g==','USER'),('2023-11-16 09:26:38.381187',87,91,NULL,'잠꼬대 하는 더블모니터','?','+k12tRpWphklp1G/daELqA==','ur5YyZ5YMRx0JYGFwfSYlA==','USER');
/*!40000 ALTER TABLE `member` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `member_streak`
--

DROP TABLE IF EXISTS `member_streak`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `member_streak` (
  `current_streak` int NOT NULL,
  `longest_streak` int NOT NULL,
  `created_at` datetime(6) DEFAULT NULL,
  `member_streak_id` bigint NOT NULL AUTO_INCREMENT,
  `modified_at` datetime(6) DEFAULT NULL,
  PRIMARY KEY (`member_streak_id`)
) ENGINE=InnoDB AUTO_INCREMENT=92 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `member_streak`
--

LOCK TABLES `member_streak` WRITE;
/*!40000 ALTER TABLE `member_streak` DISABLE KEYS */;
INSERT INTO `member_streak` VALUES (0,0,'2023-10-30 16:44:15.652786',1,'2023-10-30 16:44:15.652786'),(1,2,'2023-10-31 15:28:38.359164',2,'2023-11-13 10:04:59.747453'),(0,0,'2023-11-01 10:12:47.909073',10,'2023-11-01 10:12:47.909073'),(0,1,'2023-11-03 14:35:24.932452',15,'2023-11-13 12:55:26.429753'),(0,1,'2023-11-03 14:59:17.893817',16,'2023-11-16 09:42:30.281246'),(0,0,'2023-11-06 11:12:01.624597',17,'2023-11-06 11:12:01.624597'),(0,3,'2023-11-06 13:05:49.261506',20,'2023-11-16 09:27:38.188388'),(0,0,'2023-11-06 13:06:30.410260',21,'2023-11-08 10:39:38.168905'),(0,2,'2023-11-06 14:27:00.506060',22,'2023-11-17 09:12:55.885312'),(0,0,'2023-11-06 14:29:44.716574',23,'2023-11-06 14:29:44.716574'),(0,0,'2023-11-06 15:24:29.640034',24,'2023-11-08 10:37:41.320390'),(0,0,'2023-11-06 19:14:57.254707',25,'2023-11-06 19:14:57.254707'),(1,1,'2023-11-08 10:35:08.382611',28,'2023-11-08 10:59:26.832834'),(0,1,'2023-11-09 09:34:01.907224',29,'2023-11-13 10:04:24.678631'),(1,1,'2023-11-09 10:00:14.523565',30,'2023-11-09 10:17:08.795138'),(1,1,'2023-11-09 11:53:38.098872',31,'2023-11-09 11:55:26.951184'),(1,1,'2023-11-09 11:58:10.326425',32,'2023-11-09 11:59:09.245160'),(0,0,'2023-11-09 11:59:42.642616',33,'2023-11-09 11:59:42.642616'),(0,2,'2023-11-09 12:02:49.841861',34,'2023-11-13 10:41:54.856333'),(0,0,'2023-11-09 12:36:24.912911',35,'2023-11-09 12:36:24.912911'),(0,0,'2023-11-09 12:38:39.633593',42,'2023-11-09 12:38:39.633593'),(0,0,'2023-11-09 12:52:01.658668',55,'2023-11-09 12:52:01.658668'),(1,2,'2023-11-09 13:30:11.236363',56,'2023-11-17 04:07:54.886141'),(0,0,'2023-11-09 14:36:09.873011',57,'2023-11-09 14:36:09.873011'),(0,0,'2023-11-09 14:37:10.148762',58,'2023-11-09 14:37:10.148762'),(1,1,'2023-11-09 15:16:45.173517',59,'2023-11-09 15:18:10.523643'),(1,1,'2023-11-09 15:31:28.635813',60,'2023-11-09 15:32:50.898365'),(1,1,'2023-11-09 15:34:59.377634',61,'2023-11-09 15:35:20.745443'),(0,0,'2023-11-09 15:42:50.003083',62,'2023-11-09 15:42:50.003083'),(0,0,'2023-11-09 16:06:15.102950',63,'2023-11-09 16:06:15.102950'),(1,2,'2023-11-10 09:51:28.335359',65,'2023-11-16 14:01:25.953696'),(1,1,'2023-11-10 15:24:32.510106',66,'2023-11-10 15:25:15.893440'),(0,0,'2023-11-10 15:24:38.579415',67,'2023-11-10 15:24:38.579415'),(1,1,'2023-11-10 15:24:39.351713',68,'2023-11-10 15:25:19.937102'),(0,1,'2023-11-10 15:24:51.742374',69,'2023-11-15 14:30:17.511129'),(0,0,'2023-11-10 15:26:24.628414',70,'2023-11-10 15:26:24.628414'),(0,0,'2023-11-10 15:27:38.851787',71,'2023-11-10 15:27:38.851787'),(0,0,'2023-11-10 15:34:44.380117',72,'2023-11-10 15:34:44.380117'),(0,0,'2023-11-10 15:47:03.895958',73,'2023-11-10 15:47:03.895958'),(1,1,'2023-11-10 15:54:30.565943',74,'2023-11-10 15:55:44.409180'),(0,0,'2023-11-10 16:19:27.425180',75,'2023-11-10 16:19:27.425180'),(1,1,'2023-11-10 16:21:21.264948',76,'2023-11-10 16:22:30.695509'),(1,1,'2023-11-10 16:24:12.905873',77,'2023-11-10 16:24:40.274251'),(0,0,'2023-11-10 16:26:32.854350',78,'2023-11-10 16:26:32.854350'),(1,1,'2023-11-10 17:11:57.503741',79,'2023-11-10 17:12:39.061480'),(1,1,'2023-11-10 17:13:33.750167',80,'2023-11-10 17:13:48.245819'),(0,0,'2023-11-11 06:36:57.796407',81,'2023-11-11 06:36:57.796407'),(1,1,'2023-11-13 07:43:35.562533',82,'2023-11-13 07:44:23.476407'),(0,0,'2023-11-13 12:06:47.911826',83,'2023-11-13 12:06:47.911826'),(0,0,'2023-11-15 14:30:48.705303',84,'2023-11-15 14:30:48.705303'),(1,1,'2023-11-15 14:31:22.006795',85,'2023-11-15 14:32:19.950682'),(0,0,'2023-11-15 14:32:18.067279',86,'2023-11-15 14:32:18.067279'),(0,0,'2023-11-15 14:52:07.956881',87,'2023-11-15 14:52:07.956881'),(0,0,'2023-11-15 15:47:10.248601',88,'2023-11-15 15:47:10.248601'),(0,0,'2023-11-16 08:31:36.105368',89,'2023-11-16 08:31:36.105368'),(0,0,'2023-11-16 09:18:26.249994',90,'2023-11-16 09:18:26.249994'),(0,0,'2023-11-16 09:26:38.379441',91,'2023-11-16 09:26:38.379441');
/*!40000 ALTER TABLE `member_streak` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `streak`
--

DROP TABLE IF EXISTS `streak`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `streak` (
  `solved_count` int NOT NULL,
  `streak_date` date NOT NULL,
  `created_at` datetime(6) DEFAULT NULL,
  `member_id` bigint DEFAULT NULL,
  `modified_at` datetime(6) DEFAULT NULL,
  `streak_id` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`streak_id`),
  KEY `FKb665ir17uv8h2gn7e00mi46uk` (`member_id`),
  CONSTRAINT `FKb665ir17uv8h2gn7e00mi46uk` FOREIGN KEY (`member_id`) REFERENCES `member` (`member_id`)
) ENGINE=InnoDB AUTO_INCREMENT=48 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `streak`
--

LOCK TABLES `streak` WRITE;
/*!40000 ALTER TABLE `streak` DISABLE KEYS */;
INSERT INTO `streak` VALUES (13,'2023-11-08','2023-11-08 10:56:35.186566',16,'2023-11-09 08:46:58.094453',7),(2,'2023-11-08','2023-11-08 10:59:26.830608',24,'2023-11-08 11:01:25.284850',8),(12,'2023-11-08','2023-11-08 16:30:19.756613',2,'2023-11-09 08:48:51.769063',9),(2,'2023-11-09','2023-11-09 09:27:54.499761',2,'2023-11-09 09:33:58.903086',10),(3,'2023-11-09','2023-11-09 09:39:30.811478',25,'2023-11-09 09:54:40.791470',11),(49,'2023-11-09','2023-11-09 09:41:29.681260',16,'2023-11-10 00:39:48.452866',12),(2,'2023-11-09','2023-11-09 09:43:21.455774',18,'2023-11-09 09:43:29.815361',13),(2,'2023-11-09','2023-11-09 10:17:08.793709',26,'2023-11-09 10:20:12.458601',14),(1,'2023-11-09','2023-11-09 11:55:26.949964',27,'2023-11-09 11:55:26.949964',15),(4,'2023-11-09','2023-11-09 11:59:09.243694',28,'2023-11-09 12:06:33.003790',16),(9,'2023-11-09','2023-11-09 14:21:20.411326',30,'2023-11-09 15:04:51.920304',17),(5,'2023-11-09','2023-11-09 15:18:10.521672',55,'2023-11-09 15:32:34.196696',18),(1,'2023-11-09','2023-11-09 15:32:50.896598',56,'2023-11-09 15:32:50.896598',19),(6,'2023-11-09','2023-11-09 15:35:20.743683',57,'2023-11-09 15:37:59.055298',20),(1,'2023-11-10','2023-11-10 09:06:28.664962',30,'2023-11-10 09:06:28.664962',21),(1,'2023-11-10','2023-11-10 09:26:34.671558',11,'2023-11-10 09:26:34.671558',22),(3,'2023-11-10','2023-11-10 10:02:20.228848',61,'2023-11-10 10:23:00.623404',23),(10,'2023-11-10','2023-11-10 10:46:06.520695',16,'2023-11-11 00:02:40.340174',24),(9,'2023-11-09','2023-11-10 13:25:47.055556',52,'2023-11-11 18:24:09.786286',25),(1,'2023-11-10','2023-11-10 15:25:10.143552',65,'2023-11-10 15:25:10.143552',26),(11,'2023-11-10','2023-11-10 15:25:15.891759',62,'2023-11-10 15:51:09.249840',27),(3,'2023-11-10','2023-11-10 15:25:19.935553',64,'2023-11-10 15:27:35.026237',28),(3,'2023-11-10','2023-11-10 15:55:44.407910',70,'2023-11-10 15:57:54.787847',29),(1,'2023-11-10','2023-11-10 16:22:30.694147',72,'2023-11-10 16:22:30.694147',30),(1,'2023-11-10','2023-11-10 16:24:40.272883',73,'2023-11-10 16:24:40.272883',31),(1,'2023-11-10','2023-11-10 17:12:39.060415',75,'2023-11-10 17:12:39.060415',32),(4,'2023-11-10','2023-11-10 17:13:48.244534',76,'2023-11-10 17:16:15.811610',33),(22,'2023-11-10','2023-11-10 18:30:01.220451',18,'2023-11-10 19:11:46.105043',34),(3,'2023-11-11','2023-11-11 15:56:27.288442',52,'2023-11-11 18:12:38.036139',35),(1,'2023-11-12','2023-11-12 01:51:11.807311',52,'2023-11-12 01:51:11.807311',36),(9,'2023-11-12','2023-11-12 02:21:34.699090',16,'2023-11-12 11:15:19.497985',37),(1,'2023-11-13','2023-11-13 07:44:23.474904',78,'2023-11-13 07:44:23.474904',38),(4,'2023-11-13','2023-11-13 08:53:35.568990',61,'2023-11-13 14:46:31.562960',39),(2,'2023-11-13','2023-11-13 10:04:59.746065',2,'2023-11-13 10:08:15.352811',40),(1,'2023-11-14','2023-11-14 10:03:35.550817',61,'2023-11-14 10:03:35.550817',41),(2,'2023-11-14','2023-11-14 14:58:47.650602',16,'2023-11-14 15:01:00.493805',42),(1,'2023-11-14','2023-11-14 17:39:30.441579',12,'2023-11-14 17:39:30.441579',43),(1,'2023-11-15','2023-11-15 14:32:19.945855',81,'2023-11-15 14:32:19.945855',44),(1,'2023-11-15','2023-11-15 14:45:54.598784',18,'2023-11-15 14:45:54.598784',45),(1,'2023-11-16','2023-11-16 14:01:25.951945',61,'2023-11-16 14:01:25.951945',46),(1,'2023-11-17','2023-11-17 04:07:54.880416',52,'2023-11-17 04:07:54.880416',47);
/*!40000 ALTER TABLE `streak` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-11-17 10:05:09
